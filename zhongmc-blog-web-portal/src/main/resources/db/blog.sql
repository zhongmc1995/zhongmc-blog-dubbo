/*
Navicat MySQL Data Transfer

Source Server         : localhost3306
Source Server Version : 50550
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50550
File Encoding         : 65001

Date: 2017-03-10 15:08:15
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for tbl_blog
-- ----------------------------
DROP TABLE IF EXISTS `tbl_blog`;
CREATE TABLE `tbl_blog` (
  `id` int(32) NOT NULL,
  `title` varchar(200) DEFAULT NULL,
  `content` longtext,
  `keywords` varchar(1000) DEFAULT NULL,
  `viewnum` int(11) DEFAULT NULL,
  `status` varchar(16) DEFAULT NULL COMMENT '博客状态',
  `coverpic` varchar(100) DEFAULT NULL,
  `createtime` datetime DEFAULT NULL,
  `createby` varchar(200) DEFAULT NULL,
  `updatetime` datetime DEFAULT NULL,
  `updateby` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbl_blog
-- ----------------------------
INSERT INTO `tbl_blog` VALUES ('1', '我的第一份项目书', '<p>|| &nbsp;东哥说职场 &nbsp;今天是日更第72天</p><p>喜欢“职场三十六计”的朋友今天又要失望了，因为今天的文章和“三十六计”没有关系，但我承诺，我一定会把“职场三十六计”写完的，而且我也一定会用最好的视角和素材来写“职场三十六计”。</p><p>从2016年12月28日在简书上日更以来，今天是第72天，关于写作上的收获，我已经在前面的文章里都写过了，有兴趣的朋友可以看这两篇文章<a href=\"http://www.jianshu.com/p/3844409feb14\" target=\"_blank\">《连续日更60天拿下简书签约作者的秘诀》</a><a href=\"http://www.jianshu.com/p/e54691316187\" target=\"_blank\">《一年阅读300本书的秘诀》</a>。</p><p>今天要和大家分享的内容是我通过简书平台写作的另外一大收获，就是我通过写作发现了一个商机，一个可以创业的项目。当然了，有的人要问，你准备做的创业项目也可以拿出来分享吗？是的，我觉得完全可以分享给大家。</p><p>第一，我觉得这是我在简书的意外收获，因为当时的写作动机完全是想逼着自己做点原来从来没做过的事情，而且是自己比较感兴趣的东西。所以一定要分享给大家，我想说的写作可以给我们带来很多意想不到的东西，前提是，你必须动手写。</p><p>第二，我没有觉得这是商业秘密不可以公开，包括BP（商业计划书）都可以分享给大家，因为如果你的项目这么容易被模仿，那这样的项目是没有核心竞争力的，况且，这种项目的商业逻辑很容易理解，但不容易执行，因为这样的项目是轻商业模式重运营，是完全靠运营和资源做的，所以，你不会运营，没有足够的资源根本做不起来。</p><blockquote>写作聚焦让我找到了市场定位</blockquote><p>我从12月28日开始决定日更的时候，已经经过了大约半个月的思考和调研，才决定专门聚焦“职场内容”，主要原因有两个。</p><p>一、我有多年的职场经验，从基层到高管，再到自己创业可谓是经验丰富了，所以，写自己做过的才是最有说服力的。</p><p>二、原来一直喜欢看书，再加上自己的学习能力不错，以及咨询公司和培训公司的经验，让我锻炼出了超强的总结和提炼能力，这在以往的工作中已经驾轻就熟了。</p><p>在写作40多天的时候，简书里一位资深的老师和我联系，他说的我写的内容很不错，可以出书等等。同时也安排了负责出版的编辑和我对接。正好这个时候，陆陆续续有出版社的编辑也联系我出书，还有一些公众号要求转发等。这个时候才引起了我的重视，我开始思考：我的内容为何会引起大家的关注？</p><p>接下来，我做了两个调研动作。</p><p>一、我把简书上“上班这点事儿”里的文章基本上都过了一遍，特别是一些热文，我看了这些文章的内容结构，以及写作风格，还有作者的简历。</p><p>二、我在专门给公众号做排名的媒体“新榜”数据库里做了详细的调研，目的是了解一下关于“职场内容”的公号有哪些，内容的方向是什么，以及运营人的背景。</p><p>最后的结论，让我觉得很意外。第一、是细而不大。就是说有很多聚焦细分领域的公号，但就是因为太细，所以做的都不大。第二，基本上没有综合性的职场内容平台，这就是机会。于是，一个“职场内容平台”的项目构思逐渐在的脑海里越来越清晰了。</p><blockquote>市场容量有多大？</blockquote><p>我通过两个多月的写作，以及写作期间与粉丝的互动，我发现这里面既有在校大学生，也有刚毕业的大学生，还有工作3-5年的职场中坚力量，甚至还有正在为职业定位迷茫的工作十年左右的老兵。经过大量的互动交流，我基本为我的目标群体做了一个场景的规划：准毕业生、毕业生、10年以内的职场人（500强和外资企业的除外）。</p><p>2017年的大学毕业生大约是765万，再加上非学历的人，每年第一次找工作的就职人员约1000万，加上职场10年以下工龄的人，我们的目标群体可以理解约有1个亿。</p><p>按照市场上一般的转化率，1个亿的目标客户，如果你能做到市场领先定位的话可以有10%约1000万的用户，收费转化率也是10%的话就有100万的收费用户，其中平均每人每年消费100元的话，就是1个亿的市场规模（这都是常规的推算预测）。</p><p>具体从目标用户群体如何做再次的拓展和延伸，这是下一步的商业空间，这里就暂时不写了。</p><p>我直接附上商业计划书，让大家一睹为快。</p><p><br></p><p><br></p>', '喜欢“职场三十六计”的朋友今天又要失望了，因为今天的文章和“三十六计”没有关系，但我承诺，我一定会把“职场三十六计”写完的，而且我也一定会用最好的视角和素材来写“职场三十六计”。', null, null, '', '2016-12-15 12:47:57', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('2', '产品经理要懂多少，才“配”当产品经理', '<h1>产品经理要懂多少，才“配”当产品经理</h1><p>作为一名产品经理，我们在实际的工作中跟我们打交道最多的有哪些人呢？你的老板、客户、前端开发工程师、后端开发工程师、UI设计师、UE交互设计、测试工程师、运营工程师等。</p><p><img style=\"max-width:100%;\" src=\"http://upload-images.jianshu.io/upload_images/5075301-ef48336947205736?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>好了，我们来一个一个的拆分一下，产品经理与这些人打交道到底是要搞清楚一些什么问题，同时也通过这种方式也来深层次的认知一下我们到底在通往产品经理路上的那个阶段。</p><p>一、对接老板</p><p><img style=\"max-width:100%;\" src=\"http://upload-images.jianshu.io/upload_images/5075301-0ee286e4aefdd4b9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>产品经理最先面对的就是你的老板，他不会经常关注你所做的产品的细节方面，但是他却会隔三差五的问一下现在产品设计的一些大的方面的东西。比如，他会问这个产品多久可以上线试运营？这个产品设计出来后能不能满足我们的市场需求？产品上现在还有哪些问题没有解决等。</p><p>所以这个时候，面对老板的问题，我们最好的方式就是要提前预想到老板要问的这些问题，然后及时的做出一些数据分析的表格。比如整个项目的时间安排进度表我们要及时的更新，我们的产品能满足市场上的哪些需求我们需要将满足点一一罗列出来，然后从定性和定量的角度上来加以分析后来佐证我们的想法。对于产品现阶段的问题，我们需要每天都给项目团队发出一个该产品目前存在的问题清单，然后抄送给你的老板。或许你的老板有的时候由于忙没有及时的看邮件，但是这样做才能让大家及时的知道整个项目上存在的问题并及时解决。</p><p>当然，老板也会经常和你谈论一些商业思维和商业模式。具体来说就是你做的产品在整个企业或者团队的产品矩阵中占据何等地位，又是如何为其他产品带来益处的等。</p><p><img style=\"max-width:100%;\" src=\"http://upload-images.jianshu.io/upload_images/5075301-c7a2b0e3c90ceea1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>对于产品经理来说，你的客户就是这个产品需求的提出者。你面对的客户有信息部的、有生产部的、有市场部的等。很多时候你会发现，对于客户要达到的同一个需求，每个客户所提的需求都会不一样。因为每个人都会站在自己的立场上来提出问题，这个时候我们可以有2种方式来收集客户所提出的需求。</p><p>（1）你可以以邮件的方式召集大家开一个会议，会议的主题就是讨论客户方所提的需求。这个时候，你会发现各个部门的人都会各抒己见，提出自己的需求。然后，你就按照每个人的发言精简的记录下每个人的需求。然后，在会议结束后，你再将收集的这些需求整理提炼后以邮件的形式发给大家，让大家确认。并告知他们，等到他们确认后统一的将这些需求发给客户方的项目管理人员做汇总核实后再发给你。这样你再拿到这个汇总后的文档做进一步的需求分析和伪需求处理，就会节省很多的时间。</p><p>（2）你可以根据客户需求的提出顺序来拟定一个需求收集调研表。然后根据排程逐个部门进行需求收集调研，调研后你根据收集的需求拟定出一份需求文档。然后邮件发送给各个部门进行确认，这样通过来回几次修正后最终你再整理出一份需求分析报告。然后找个时间将客户方的需求提出者召集起来开个小会，会议中可以总结和补充一下需求并最终确认需求。确认后让客户方签字后就可以开始下一步的工作了。</p><p>三、对接UI和UE</p><p><img style=\"max-width:100%;\" src=\"http://upload-images.jianshu.io/upload_images/5075301-52062dc7937133f4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>我们收集到客户的需求后，接下来产品经理就要按照收集的需求来整理出产品的需求文档、概要设计文档。同时，在设计出产品demo的1.0版本后，我们同时可以将产品的详细需求文档1.0版本也整理出来。这个时候，我们就要和UI和UE来讨论产品的界面设计、交互设计、用户体验、设计风格等多方面的问题了。但是在做设计之前，作为产品经理的我们一定要想清楚以下几个方面的问题：</p><p>（1）产品的层次设计与模块化设计</p><p>产品分层与模块化设计是基于产品系统框架来看的。这个时候一定要搞清楚产品在系统结构层面上是如何设计的，产品的逻辑关系是否是通的。就拿我们常见的商城产品，它可能是需要分为三个大的层面来考虑的：首先是其最底层的数据设计，然后是中间业务逻辑层，包括商品模块设计、订单模块设计、会员模块设计等，最后是订单管理系统、商品搜索系统、商城系统设计、积分体系设计等。理清楚这些后才能保证我们设计和交互的同事少做无用功。</p><p>（2）良好的产品使用路径设计</p><p>有了模块逻辑后，接下来就是进行产品在交互使用中的路径设计了。几乎所有好的产品，都拥有一条明确清晰的用户使用路径，而这条路径有的是基于流量控制的，有的是基于内容来控制的等。我们设计的产品一定要在让用户在用的很舒服的情况下达到自然引导的作用。同时，你会发现，好的产品路径也同时带来了一个好的用户体验设计。我们可以看到，产品路径的设计是基于模块间关系的，如何在各功能模块间建立良好的路径，必须有清晰可靠的框架逻辑支撑。在产品使用路径中，最高优先级流量的部分决定了产品的定位，比如微信最高流量的地方就是聊天列表，而支付宝却是各类支付通道。良好的产品路径设计，会协助你将各个模块间的关系有机结合，这种结合是产品向后迭代最重要依据。</p><p>（3）界面优化设计</p><p>产品逻辑的交互层面的一些问题理清楚以后，就要设计到界面的颜色搭配、线条设计、icon设计等一些UI设计了。其实软件界面设计就像工业产品中的工业造型设计一样，是产品的重要卖点。一个电子产品拥有美观的界面会给人带来舒适的视觉享受，拉近人与商品的距离，是建立在科学性之上的艺术设计。检验一个界面的标准既不是某个项目开发组领导的意见也不是项目成员投票的结果，而是终端用户的感受。这个时候，产品经理自己首先要做一个很好的用户来通过该产品的使用场景来体验一下这个界面布局和颜色搭配，然后你可以将你的意见或建议与UI的同事商议后进行调整。</p><p></p><p>四、对接开发人员</p><p><br></p>', '简单说， Thymeleaf 是一个跟 Velocity、FreeMarker 类似的模板引擎，它可以完全替代 JSP 。相较与其他的模板引擎，它有如下三个极吸引人的特点：\r\n    1.Thymeleaf 在有网络和无网络的环境下皆可运行，即它可以让美工在浏览器查看页面的静态效果，也可以让程序员在服务器查看带数据的动态页面效果。这是由于它支持 html 原型，然后在 html 标签里增加额外的属性来达到模板+数据的展示方式。浏览器解释 html 时会忽略未定义的标签属性，所以 thymeleaf 的模板可以静态地运行；当有数据返回到页面时，Thymeleaf 标签会动态地替换掉静态内容，使页面动态显示。\r\n    2.Thymeleaf 开箱即用的特性。它提供标准和spring标准两种方言，可以直接套用模板实现JSTL、 OGNL表达式效果，避免每天套模板、该jstl、改标签的困扰。同时开发人员也可以扩展和创建自定义的方言。', null, null, '', '2016-09-22 14:40:35', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('3', 'kindle并非王者，iReader阅读器更懂国人心！', '<p><img style=\"max-width:100%;\" src=\"http://upload-images.jianshu.io/upload_images/2980996-17d4b9a986472df9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>如果你想知道哪个电子书阅读器品牌响？</p><p>那么，我明确告诉你，是亚马逊Kindle！</p><p>但如果你要问，kindle是不是最好的？</p><p>那么，我要提醒你，别小看了iReader！！！</p><p>iReader是掌阅科技发布的阅读器，据掌阅官方的数据显示，目前掌阅APP累计注册用户已达6亿，或许正在阅读本文的你，就是6亿用户中的一员。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/2980996-20b9d4c89d3b6d9d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>OK，闲话不多扯，咱们先来看看iReader的一些基本情况。不知读者有没有发现，现在掌阅公司的APP已经去掉了iReader字眼，从这个举动我们可以看出，其以后定位就是掌阅为APP品牌，iReader为硬件阅读器的品牌，此举看上去是简单的名称划分，实际上体现了掌阅公司对硬件方向的重视。</p><p>第一代iReader于2015年八月发布，随后在2016年便发布了第二代iReader Plus，从发布的产品来看，也的确看出了掌阅公司的雄心。一开始笔者体验机器并不抱有好感，做软件的干硬件，有点不搭。但体验一段时间之后，发现iReader阅读器的确是个不错的产品，与kindle相比，毫不孙色！</p><p>一、简约设计，文艺阅读；</p><p>1、外观</p><p>iReader目前发布了两代，两者外观上变化不大，但从官方公布的数据来看，二代机身厚度降低到8.7，较一代薄了14%。厚度降低到208克，相比一代降低了40克，与kindle paper white3的205g相差仅3克。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/2980996-1d162a9ec058dd38.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>从尺寸上来看，虽然6.8寸的屏幕大于kindle paperwhit3（简称KPW3）的6寸，但是对于单手握持来说，问题不大。而后部的iReader的logo为灰色印刷材质，与后盖磨砂质感表面相得益彰。</p><p>2、界面</p><p>说到外观，不得不提一下iReader阅读器的界面，iReader阅读器不支持自定义界面，但机器自身的界面也足够的优美，古典质朴、极富韵味，对于喜欢古典文化的笔者来说非常感触，这种感觉就好像是纸质版《三国》封面配备的那首《临江仙·滚滚长江东逝水》词一样，看到便是一种情怀，对读书再好不过了。</p><p>2、按键</p><p>相对于一代产品，iReader Plus在按键插孔方面有较大变化，设计感觉上比一代简约了不少。首先取消了正面底部的HOME键，接着侧面的耳机插孔也取消了，因此二代机身总共只有待机和背光灯开关两个按钮和一个电源插孔。</p><p>二、便捷系统，舒心阅读；</p><p>笔者一直认为，阅读器最大的作用是保护视力，而最终目的就是阅读。阅读是一件简单而有乐趣的事情，如果都从评测者的角度来看机器，有点偏离本质了。所以，以我的角度来看，操作简单、容易上手是阅读器的最基本前提。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/2980996-c52f7e946b54552f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>1、安卓定制</p><p>电子产品是硬件和系统软件的结合，体验好不好，系统软件方面有很大的影响。iReader阅读器是基于安卓的定制系统，相对于kindle，操作很简单不折腾，非常适合老人和小孩使用。</p><p>微信是大家非常熟知的社交软件，智能手机几乎都有安装，微信的主界面分为“微信、通讯录、发现、我”四个界面，iReader阅读器功能界面非常类似，主界面分为“书架、书城、我的、设置”四个模块。</p><p>书架部分相当于本地书库，下载的书、导入的书都在这里面，以最近阅读时间递增排序。书架也可以进行图书整理归类，非常简单方便。书城就是掌阅的书城，拥有五十万册图书资源，里面有非常细致的图书分类，在联网的情况下可以通过搜索或者分类索引的方式来找想看的书。</p><p>“我的”主要是用户账号的一些信息和功能，比如说账号登录、每日签到、个人资产、礼品兑换、充值等等。“设置”模块主要是固件优化和印象笔记绑定的，其它如阅读灯WIFI、蓝牙都可以在阅读界面控制，另外存储容量也可以在“设置”里面查看。</p><p>2、账号同步</p><p>掌阅APP和iReader阅读器的账号是相通的，在手机端阅读，其进度、笔记之类的iReader硬件都可以检测并同步。反之也是如此，在硬件上阅读，手机端同样可以检测直接同步。</p><p>3、格式支持</p><p>每款阅读器都有格式限制的问题，kindle原生系统就不支持EPUB格式，而且在不用邮箱转化格式的情况下，对TXT、PDF格式也不甚理想。相比之下，iReader在格式支持上比较广泛，UMD、EBK、EPUB、TXT、MOBI、PDF六种主流格式都支持。</p><p>4、自动断章</p><p>自动断章功能是针对自己导入的书籍，在书城下载的书籍都已经排版好了，但自己在网上下载的书则不完全是，一些同类产品导入没排版好的书籍，会出现章节不分、段落不明的情况，而iReader阅读器可以根据段落识别功能自动断章排版，增加本地图书导入的阅读体验。</p><p>注：PDF格式不具备该功能。</p><p>5、PDF裁边重排</p><p>iReader阅读器在PDF体验上有了一些进步，6.8英寸屏幕比常见6英寸屏幕体验更佳，此外iReader在PDF格式支持上也有优化，支持扫描版裁边、非扫描版重排，对于中小屏的阅读器来说，是一个非常有用的功能。</p><p>三、高配硬件，流畅阅读；</p><p>从硬件配置来看，iReader阅读器是行业内名副其实的土豪配置，屏幕、处理器、存储、WIFI设置可以与尊贵版的kindle oasis一较高下。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/2980996-47536dd0486300ca.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>1、Eink第三代Carta1.2电子墨水屏</p><p>目前主要电子书阅读器基本都采用Eink电子墨水屏，但就屏幕属性来说，iReader配置的第三代Carta1.2电子墨水屏在性能上表现好于其它屏幕。</p><p>相比传统珍珠屏，最新的是三代carta1.2电子墨水屏提升了50%的对比度，16级灰阶让图样显示比之前更加细致。此外，这代Carta屏在刷新速度和残影方面做了优化，发挥了Eink Rega1波形技术的优势，可在翻页的时候，减少全部刷新的频率，相应的提高翻页速度，又能把残影问题控制在一定的程度。</p><p>仔细对比下，iReader阅读器很少全刷，几乎没有频闪，而同价位的Kindle差不多五页一全刷。</p><p>2、飞思卡尔IMX6SL</p><p>在处理器方面，iReader Plus与kindle Oasia采用同款的飞思卡尔蕊片，虽然与电脑、手机有些差距，但与Eink墨水屏联系在一起堪称绝配，在完全支持阅读器运行的情况下，最大限度发挥Eink屏幕的优势性能，并且还能最大限度的降低功耗。</p><p>细心的用户可以发现，JDread阅读器电池容量2800mAh，而kindle和iReader都是1500mAh或者1600mAh，这主要就是处理器功耗的原因。</p><p>3、双频WIFI</p><p>一般电子书阅读器WIFI只是联网浏览书城，下载书籍用的，但iReader阅读器WIFI功能不只是联网，还能依靠WIFI进行推送传书，因此iReader采用了2.4GHz/5GHz双频WIFI,数据传输速度有了很大提升。这也是为什么iReader导入书籍、下载书籍快的原因。</p><p>注：kindle Oasis无双频WIFI。</p><p>4、8G存储</p><p>iReader一代产品和kindlepaperwhite3、kindle Oasis一样采用4G硬盘，刨掉系统占用，一般只剩下2.2G左右有效存储空间。而第二代iReader Plus将存储扩大为8G，实际有效存储多大5个G，对于电子书阅读、预装系统、机器缓存进程都是不错的配置。而且能够存储近4000本书籍，外出的时候放在包里，相当于身上带了一个小型图书馆。</p><p>四、贴心功能，高效阅读；</p><p>真正适合看书的产品，能够最大限度的提高阅读效率。iReader阅读器有许多辅助阅读的功能，对提高阅读效率有极大的帮助。</p><p>1、WIFI传书</p><p>推书是阅读器用户比较重视的功能，相比kindle的油箱传书，iReader简单了不少，只需在同一WIFI网络下，就可以直接无线传书，电脑端在浏览器输入网址，手机端直接扫二维码，方便快速，一气呵成！</p><p><img src=\"http://upload-images.jianshu.io/upload_images/2980996-c16a6451b389e955.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>2、网文推送</p><p>网文推送是iReader年前升级的一个功能，对于一些想要收藏的文章，用户可以通过iReader官网公众号发送到阅读器上，在有硬件导入就可以直接阅读了。</p><p>注：经测试，目前仅支持微信文章。</p><p>3、蓝牙听书</p><p>阅读器通常是用来“看”书的，但iReader也可以用来“听”书，这是其它阅读器都不具备的功能，在看书看累的情况下解放双眼，连接蓝牙耳机就可以继续“阅读”了。</p><p>4、百度百科</p><p>iReader采用的是封闭系统，无法安装浏览器和其他音视频软件，这样做是为了保证了阅读的专注性，但为了避免限制查找资料，iReader开通了百度百科的功能，只要选择的词语，点击百度百科就能解惑了。</p><p>5、自定义字体</p><p>纸质书一般采用特定的字体，但iReader阅读器可以按照自己的喜好选择字体，如果机器自带字体不够的话，还能在网上下载喜欢的字体导入到机器里进行设置，这样提高了阅读感官，增强读书效率。</p><p>6、印象笔记</p><p>我们看书的时候，经常会做点笔记什么的，但是如果不整理一下，或许再也不会去看，而且很难再次查找。iReader阅读器可以将做好的笔记导出来，并且原文部分也能同步摘抄下来，这样就方便整理和复习了。</p><p>五、优势资源，品质阅读。</p><p>书籍资源是阅读器的一个基础，很多人之所以选择kindle,就是因为觉得掌阅书城不如kindle书城，其实这样理解是有偏颇的。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/2980996-1eb7f945a45a45f0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>亚马孙一开始是做纸质书籍的，后来才延伸到其它零售和电子书，我们从各自官网的介绍可以看到，kindle号称30万册，而iReader宣称有五十万册，总体数量上掌阅略胜一筹。</p><p>当然，用户或许觉得kindle正规书更多，其实你以为的并非真的你以为的，掌阅出版类图书存量也是非常大的。以kindle发布的2016年度阅读数据来看，排名前十的畅销书在iReader书城都能搜索到，而亚马逊排名前十的畅销纸质书iReader书城能搜索到七本，此外畅销作者的书籍也基本能找到，单纯东野佳吾的作品就有几十本，由此可见掌阅iReader资源并不输于kindle。</p><p></p><p>以上就是对iReader的一些介绍了，笔者自认为比较全面了，如果还有哪些漏掉的优点，咱们评论里约！！！</p><p><br></p>', 'iReader是掌阅科技发布的阅读器，据掌阅官方的数据显示，目前掌阅APP累计注册用户已达6亿，或许正在阅读本文的你，就是6亿用户中的一员。', null, null, '', '2016-11-01 14:40:42', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('4', '前端产品经理和后端产品经理的主要区别是什么', '<blockquote>大白PM总结：前端产品和后端产品最大的不同是产品形态的不同、面向用户群体的不同。探讨前端产品经理和后端产品经理的主要区别我认为核心还是探讨前端产品和后端产品的区别。</blockquote><h2></h2><p><img src=\"http://upload-images.jianshu.io/upload_images/1396518-3cf106541d17dd41.gif?imageMogr2/auto-orient/strip\"><br></p><h2>前端产品经理</h2><p>也叫2C产品经理或C端产品经理或客户端产品经理。主要面向普通用户或被服务者。比如**点评客户端，团购客户端，打车客户端等等。这类产品的特点是：</p><p>1、区分客户端和商户端，并且功能差异很大，一个提供服务，一个享受服务；</p><p>2、客户端具有操作、购买、下单功能；</p><p>3、商户端具有开启、关闭服务，更新、上下架商品等功能；</p><p>4、客户端产品前期靠运营、推广获得用户，商户端产品前期靠商务拓展人员去寻找合作商户；</p><h3>让产品变的更好看、好用</h3><p>产品业务倾向于给用户提供更美观的设计界面、更方便的使用体验，简化用户使用流程，优化用户的产品使用体验；</p><h3>让用户变的更活跃</h3><p>从运营角度可能需要产品配合预留一些活动运营方面的推广位、专题栏等；普通用户对于平台的忠诚度是很低的，这也是互联网各同行业竞品之间互相厮杀的重要原因，提高用户补贴、给予用户活动优惠券、节日优惠券、拉新奖励、活动奖励、新人礼包等等。互联网行业起初很大程度上是在烧钱培养用户的习惯，或者是赔钱赚吆喝以获得更高的行业知名度。</p><h3>让平台变的更可信</h3><p>从平台方面考虑可能需要产品预留突发事件警告、应急、公告位等。互联网产品由于频繁的上线、发布新版本等特性，不可避免的增加了产品出错的概率，实时的发布公告、安抚用户是维护平台信誉的重要手段之一。</p><h3>需求来源</h3><p>面向用户搜集产品需求,产品经理根据用户反馈搜集用户需求，其他产品需求挖掘参考我之前的一篇文章<a href=\"http://www.dabaipm.cn/static/woshipm/178.html\" target=\"_blank\">稳定型产品进行版本迭代需求从哪来？</a></p><h2></h2><h2>后端产品经理</h2><p>也叫2B产品经理或B端产品经理或商户端产品经理，主要面向的是商家或服务的提供者，开发商户的商铺或商品管理平台。</p><h3>高复杂性</h3><p>产品特性就是以支持客户端产品为核心，优化商户端产品界面和流程，降低商户端使用难度。后端产品根据产品形态不同要保证后端业务逻辑清晰的基础上还要兼顾前端产品的需求；前端产品可以根据需要做数据或字段的增删改查，这些都高度依赖于后端产品的设计、开发。后端是前端的基础！</p><h3>高扩展性</h3><p>一般而言，商户端产品比客户端产品复杂性更高，平台的可扩展性要求也更高。</p><p>前端产品可以依赖于技术去写接口调用数据库的（由后端系统录入的）任何数据，但是后端就必须保证之前已经有对应的字段录入商户系统，否则前端功能根本无法实现。</p><h3>需求来源</h3><p>面向商家搜集产品需求，产品经理需要跟商户沟通或商务谈判。</p><blockquote>除了上文提到的前后端都有的互联网产品，还有一些互联网产品是只有一端提供服务的。</blockquote><p>重前端产品：</p><p>比如手机QQ、微信、微博、知乎、百度搜索等，这类产品属于是纯前端产品，一般没有后端界面或只有简单的后端统计界面，前端产品完全不依赖于后端，每个版本都可以独立运行。</p><p>重后端产品：</p><p>比如某基金管理公司开发的股票交易系统、量化交易系统、面向企业数据安全的风险评估系统等，这类产品一般是纯后端产品或者只有简单的几个前端界面，操作按钮等。</p><blockquote>作者简介</blockquote><p>** 大白PM **，新转行小白产品经理，对产品领域知识的认知尚浅，疏忽之处在所难免，欢迎同行大神多多指点。</p><p></p><p>如果觉得本文有用欢迎点赞、留言、打赏。谢谢大家！</p><p><br></p>', '前端产品和后端产品最大的不同是产品形态的不同、面向用户群体的不同。探讨前端产品经理和后端产品经理的主要区别我认为核心还是探讨前端产品和后端产品的区别。', null, null, '', '2016-11-14 14:40:48', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('5', '十分钟搭建主流框架_简单的网络部分(OC)', '<h3>本节主题（简单的网络部分）</h3><ul><li>源码地址在文章末尾</li><li>达成效果<img src=\"http://upload-images.jianshu.io/upload_images/620754-ef988c1eaa893eeb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\">效果图</li><li>注：本文API使用HaoService数据平台</li></ul><h2>前言</h2><ul><li>废话不说了，简单来说，移动网络很重要，下面让我们来实现一个简单的Demo：对网络数据的请求，并接收与展示吧。注意：是简单的！很简单的！</li></ul><h2>准备工作</h2><h4>1.文件目录结构示图（按照MVC分层）</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/620754-ab5d7ceb968dc1aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>文件目录结构图/自定义Cell</p><ul><li>Controller: CYXOneViewController</li><li>Model: CYXMenu</li><li>View: CYXCell</li></ul><h4>2.使用cocoapods集成第三方框架</h4><ul><li>注：这里就直接使用cocoapods插件安装第三方框架了</li></ul><p><img src=\"http://upload-images.jianshu.io/upload_images/620754-620a8991c6163836.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>第三方框架</p><ul><li>这里要使用到的三方框架包括AFNetworking、MJExtension、SDWebImage</li><li>框架用途简介AFNetworking：用于发送网络请求MJExtension：用于把网络返回的JSON格式数据转换为模型属性SDWebImage：用于下载网络图片</li></ul><h2>基本思路简述</h2><ul><li>1.在CYXOneViewController中使用AFNetworking发送GET请求,得到服务器返回的JSON格式的数据</li><li>2.使用MJExtension把JSON格式的数据转为模型CYXMenu对应的属性</li><li>3.在- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;方法内根据索引indexPath.row把每一行Cell的Model属性传递给自定义Cell(CYXCell)</li><li>4.在自定义Cell(CYXCell)内接收模型数据并初始化Cell的内部控件</li><li>5.不要忘记在AFN框架内的GET请求成功调用的block中刷新TableView的数据</li></ul><h2>详细实现 上代码</h2><ul><li>第一步：设计模型属性（CYXMenu.h），这里的属性名根据<a href=\"http://www.haoservice.com/docs/30\" target=\"_blank\">API文档设计</a>，本Demo只是使用了其中几个简单的</li></ul><pre><code>#import &lt;Foundation/Foundation.h&gt;\n\n@interface CYXMenu : NSObject\n\n/** 图片 */\n@property (copy, nonatomic) NSString * albums;\n/** 标题 */\n@property (nonatomic,copy) NSString *title;\n/** 材料 */\n@property (nonatomic,copy) NSString *ingredients;\n\n@end</code></pre><ul><li>第二步：自定义cell（这里使用Xib了）2.1 拖控件到Xib中（见文件目录结构图）2.2 在CYXCell.h中定义一个模型属性，用于供外界（CYXOneViewController）访问并传递模型进来。#import &lt;UIKit/UIKit.h&gt;\n\n@class CYXMenu;\n\n@interface CYXCell : UITableViewCell\n\n/** 菜单模型 */\n@property (strong, nonatomic) CYXMenu * menu;\n\n@end2.3 在CYXCell.m中实现menu属性的- (void)setMenu:(CYXMenu *)menu方法，将取到的menu模型值给cell自身的控件赋值由于这里需要通过URL下载网络图片，使用到了SDWebImage框架  #import \"CYXCell.h\"\n  #import \"CYXMenu.h\"\n  #import &lt;UIImageView+WebCache.h&gt;\n\n  @interface CYXCell ()\n  @property (weak, nonatomic) IBOutlet UIImageView *albumsImageView;\n  @property (weak, nonatomic) IBOutlet UILabel *titleLable;\n  @property (weak, nonatomic) IBOutlet UILabel *ingredientsLabel;\n  @end\n\n  @implementation CYXCell\n  - (void)setMenu:(CYXMenu *)menu{\n\n      _menu = menu;\n      // 利用SDWebImage框架加载图片资源\n      [self.albumsImageView sd_setImageWithURL:[NSURL URLWithString:menu.albums]];\n      // 设置标题\n      self.titleLable.text = menu.title;\n      // 设置材料数据\n      self.ingredientsLabel.text = menu.ingredients;\n\n  }\n  @end</li><li>第三步，到这里我们需要在CYXOneViewController.m内实现&nbsp;网络数据请求/JSON数据转模型/给自定义cell传递模型数据&nbsp;的操作</li></ul><pre><code>    #import \"CYXOneViewController.h\"\n    #import \"CYXCell.h\"\n    #import \"CYXMenu.h\"\n    #import &lt;AFNetworking.h&gt;\n    #import &lt;MJExtension.h&gt;\n\n    @interface CYXOneViewController ()\n\n    /** 存放数据模型的数组 */\n    @property (strong, nonatomic) NSMutableArray * menus;\n\n    @end\n\n    @implementation CYXOneViewController\n\n    #pragma mark - 全局常量\n    // 发送请求URL\n    static NSString * const CYXRequestURL = @\"http://apis.haoservice.com/lifeservice/cook/query?\";\n    // 重用cell标识符\n    static NSString * const CYXCellID = @\"cell\";\n\n    #pragma mark - life cycle 生命周期方法\n\n    - (void)viewDidLoad {\n        [super viewDidLoad];\n\n        self.tableView.rowHeight = 90;\n\n        // 注册重用Cell\n        [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([CYXCell class]) bundle:nil] forCellReuseIdentifier:CYXCellID];\n\n        // 调用加载数据方法\n        [self loadData];\n\n        self.view.backgroundColor = [UIColor whiteColor];\n    }\n\n    #pragma mark - private methods 私有方法\n    /**\n     *  发送请求并获取数据方法\n     */\n    - (void)loadData{\n\n        // 请求参数（根据接口文档编写）\n        NSMutableDictionary *params = [NSMutableDictionary dictionary];\n        params[@\"menu\"] = @\"西红柿\";\n        params[@\"pn\"] = @\"1\";\n        params[@\"rn\"] = @\"20\";\n        params[@\"key\"] = @\"2ba215a3f83b4b898d0f6fdca4e16c7c\";\n\n        // 在AFN的block内使用，防止造成循环引用\n        __weak typeof(self) weakSelf = self;\n\n        [[AFHTTPSessionManager manager] GET:CYXRequestURL parameters:params success:^(NSURLSessionDataTask * _Nonnull task, id  _Nonnull responseObject) {\n            NSLog(@\"请求成功\");\n\n            // 利用MJExtension框架进行字典转模型\n            weakSelf.menus = [CYXMenu objectArrayWithKeyValuesArray:responseObject[@\"result\"]];\n\n            // 刷新数据（若不刷新数据会显示不出）\n            [weakSelf.tableView reloadData];\n\n        } failure:^(NSURLSessionDataTask * _Nonnull task, NSError * _Nonnull error) {\n            NSLog(@\"请求失败 原因：%@\",error);\n        }];\n    }\n\n    #pragma mark - UITableviewDatasource 数据源方法\n\n    - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{\n        return self.menus.count;\n    }\n\n    - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\n\n        CYXCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"cell\"];\n\n        cell.menu = self.menus[indexPath.row];\n\n        return cell;\n    }\n\n    #pragma mark - UITableviewDelegate 代理方法\n\n    - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{\n        // 点击了第indexPath.row行Cell所做的操作\n    }\n\n    @end</code></pre><p></p><ul><li>到这里只是简单实现了网络数据的请求，还有很多细节，例如下拉/上拉刷新，、cell的点击事件等等，有时间再讨论了。</li><li>附：<a href=\"https://github.com/CYXiang/CYXTenMinDemo\" target=\"_blank\">源码github地址</a></li></ul><p><br></p>', '移动网络很重要，下面让我们来实现一个简单的Demo：对网络数据的请求，并接收与展示吧。注意：是简单的！很简单的！', null, null, '', '2017-01-18 14:40:52', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('6', ' 程序员在简书｜程序媛的小乐趣', ' <p>在还没做程序媛之前，我是一个爱玩爱浪的～成为程序媛之后，嗯，依旧放荡不羁。哈哈哈哈。翻看以前的照片，原来自己也是蛮“多才多艺”的嘛，哈哈哈。</p><p>﻿记得那时最爱涂鸦了，初中政治书里面全是配图加旁白，哈哈哈。后来上了大学逼格上升，不画书上了。买了个漂亮的本子。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-d447cc328360dbbc.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>这是以前很喜欢的一个妞</p><p>﻿这个男生是我之前喜欢的一个人的头像，我给他画了下来，不过遗憾的是没能在一起。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-979063c8c22e0320.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>DQ</p><p>﻿这是上课随手画的一个蓝胖子，当我画完发了说说之后，哈哈哈，就有个人过来砸场子了，说我画的太丑了，他随笔画的都比我好，汗颜啊，不过忘记存照片了，确实画的比我好多了。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-e0bbd4811a5db3dd.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>蓝胖子</p><p>﻿这是情人节那天送给自己的，哈哈哈。谁说单身贵族木有花，我可以自己画呀</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-231b6a255d4fbab4.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>Rose</p><p>﻿大一刚进学校，加入了两个社团，其中就有个书画协会，一直以来对书画很感兴趣，不过写的不咋滴，这是我练了半个月的成果，唉╯﹏╰。以后要多练练，争取达到我们部长的水平。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-58c7a89aefb46cb7.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>小白～</p><p>虽然不咋滴，不过拿了个鼓励奖，哈哈哈</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-4785bdc60b249195.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>给你们看下我们部长写的春联。棒棒哒﻿</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-85484bfa6a29bc40.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>部长写哒</p><p>﻿﻿大二下学期接触了LOL,还是不错的，不过每次打一局时间好长，目前玩的一共加起来不到二十次，我果然太懒了，这是我杀的最多的一次了。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-ceaea8bfbe067da6.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>感觉自己棒棒哒</p><p>﻿下面放一些我的涂鸦，尽情吐槽吧</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-82a6dba83fa2eec5.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿这个小姑娘还是很温柔哒</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-f70f787c004f16ca.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿蛮喜欢这件外套</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-61fd515c96356e38.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿这是以前喜欢的一个封面小镇</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-65746a3914ebfa12.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿哈哈哈，练笔</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-c07e2f60fecc04f9.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>第一次正式写字，乱七八糟</p><p>其实我是按照杨洋侧脸来画的，不过没有百分之一</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-55022ec8dd1f528e.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>大家觉得像谁呢</p><p>﻿萌萌哒</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-7533fe9df958f75e.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿这是小漫画，很可爱有木有</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-a587ac91ab9bc60a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿这是手工做的，猜猜用什么做的</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-c076ffdc047eef58.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿这也是我DIY，适合平安夜哟(ღ˘⌣˘ღ)</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-4af92e8f0fd8a0ba.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>App</p><p>﻿那时候喜欢言情小说女主，就画下来了</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-fb072e1251a47caa.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿喜欢无脸男。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-363f0c362475a4c3.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>Zoe</p><p>﻿这句话我很喜欢。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-75eca91eae5b375f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿我也是个小文艺哟</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-7949ad4b0265f8e7.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>喜欢枫叶</p><p>﻿最喜欢自己做吃的</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-ddc88cbb552503e2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>酸奶苹果沙拉</p><p>﻿当然，作为一个正经吃货，自己会烧，很有必要</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-0970f99f9b7987e9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>生菜</p><p>﻿有木有和我一样喜欢吃卷心菜的小伙伴啊</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-1b81518ef2d5dc01.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>卷心菜</p><p>﻿好久没烧荤菜了，然后华丽丽歇菜，不过吃起来还是不错的，下次传个卖相好看点的</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-a3608375be1c7688.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>小狐狸爱吃鱼</p><p>﻿这个味道不错</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-5eaef65c523f1293.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>高瓜肉丝</p><p>﻿这道菜我经常吃，蛮喜欢</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-e631ab9b64c8e4df.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿最擅长下面，因为我喜欢面食～嘎嘎嘎</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-b8e2af06e0794f05.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿没事爱臭美，这个姨妈色不错(*๓´╰╯`๓)</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-c6ce164ef0fad4f2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿这个围脖快织好了才发现线不够，忧桑。本来之前就要送人的，拖到现在╯﹏╰</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-ec9c1d5a5a982aa4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>围脖</p><p>﻿此生放荡不羁爱浪。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-53f5e41c6522954e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>图片发自简书App</p><p>﻿程序媛的桌面啥样？哈哈，就酱。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-fc6bebfa747c34a6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>程序媛。</p><p>﻿当然，我是一个正经吃货</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-ad3cf97534916add.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>唯有美食不可辜负</p><p>﻿听说爱笑的女生运气不会太差</p><p><img src=\"http://upload-images.jianshu.io/upload_images/3162008-4d35e6ddd90a4b7c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/100\"><br></p><p>爱笑的女生运气不会太差</p><p></p><p>本文已在版权印备案，如需转载请访问版权印。</p><p><br></p>', '﻿在还没做程序媛之前，我是一个爱玩爱浪的～成为程序媛之后，嗯，依旧放荡不羁。哈哈哈哈。翻看以前的照片，原来自己也是蛮“多才多艺”的嘛，哈哈哈。\r\n\r\n﻿记得那时最爱涂鸦了，初中政治书里面全是配图加旁白，哈哈哈。后来上了大学逼格上升，不画书上了。买了个漂亮的本子。\r\n\r\n', null, null, null, '2017-01-10 14:40:56', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('7', 'Android组件化开发实践', '<p>更新：<a href=\"http://www.jianshu.com/p/1fc5f8a2d703\" target=\"_blank\">Android组件化之通信（多模块，多进程）</a></p><p>Android项目中代码量达到一定程度，编译将是一件非常痛苦的事情，短则一两分钟，长则达到五六分钟。Android studio推出instant run由于各种缺陷一般情况下是被关闭的……组件化开发可以有效降低代码模块的耦合度，使代码架构更加清晰，同时模块化的编译可以有效减少编译时间，当然总的编译时间是不会减少的，只是App模块化之后开发某个模块时，只需要编译特定模块，可以快速编译调试。</p><h2>原理</h2><p>组件化和插件化有些同学有些迷惑，简单来说组件化是在编译期分模块，插件化是在运行期。一般插件化用于动态修复bug或者动态更新模块，相对来说黑科技更多一些。</p><p>正常一个App中可以有多个module，但是一般只会有一个module是设置为application的，其他均设置为library，组件化开发就是要每个module都可以运行起来，因此在开发期间每个module均设置为application，发布时再进行合并。</p><h2>实践</h2><p>本文主要介绍一下项目组件化开发过程碰到的问题和解决办法，这里以<a href=\"https://github.com/wutongke/ModularizationApp\" target=\"_blank\">ModularizationApp</a>项目为例。<a href=\"https://github.com/wutongke/ModularizationApp\" target=\"_blank\">ModularizationApp</a>是一个组件化的app：</p><p><img src=\"http://upload-images.jianshu.io/upload_images/1407686-2bb840fdef5d9ac2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540\"><br></p><p>Paste_Image.png</p><p><img src=\"http://upload-images.jianshu.io/upload_images/1407686-eb097c7ce3473583.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540\"><br></p><p>Paste_Image.png</p><p><img src=\"http://upload-images.jianshu.io/upload_images/1407686-74e5145beda0702e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540\"><br></p><p>Paste_Image.png</p><p><img src=\"http://upload-images.jianshu.io/upload_images/1407686-bb950d3382d8e90b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540\"><br></p><p>Paste_Image.png</p><p><img src=\"http://upload-images.jianshu.io/upload_images/1407686-a5924d98324b3762.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540\"><br></p><p>Paste_Image.png</p><ul><li>架构<img src=\"http://upload-images.jianshu.io/upload_images/1407686-2a3990b4b781784e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/380\">Paste_Image.png其中App是主application，ModuleA和ModuleB是两个业务模块，Library是基础模块，包含所有模块需要的依赖库，以及一些工具类：如网络访问、时间工具等。代码结构如图：</li></ul><p><img src=\"http://upload-images.jianshu.io/upload_images/1407686-0635652ee1b4040b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/340\"><br></p><p>Paste_Image.png</p><ul><li>Module作为application开发</li></ul><p>ModuleA和ModuleB是相对独立的业务模块，可以分别进行开发，编译时只编译自身，具体实现时在gradle.properties中设置变量，如：IsBuildMudle=false在模块的的build.gradle中：</p><pre><code>if (IsBuildMudle.toBoolean()) {\n    apply plugin: \'com.android.application\'\n} else {\n    apply plugin: \'com.android.library\'\n}</code></pre><p>在主模块的build.gradle中设置：</p><pre><code>    if (!IsBuildMudle.toBoolean()) {\n        compile project(\':ModuleA\')\n        compile project(\':ModuleB\')\n    } else {\n        compile project(\':Library\')\n    }</code></pre><p>这样每个module就可以独立安装使用了，注意在修改IsBuildMudle的值时，一定要sync gradle。当module单独运行和作为module运行时，其activity在manifest中设置也会不同，这里可以根据IsBuildMudle设置不同的manifest：</p><pre><code>    sourceSets {\n        main {\n            if (IsBuildMudle.toBoolean()) {\n                manifest.srcFile \'src/main/debug/AndroidManifest.xml\'\n            } else {\n                manifest.srcFile \'src/main/release/AndroidManifest.xml\'\n            }\n        }\n    }</code></pre><p>分别在不同的目录下创建manifest文件。一定要注意两个manifest的同步问题，否则出现了莫名其名的bug，还找不到原因……</p><ul><li>资源冲突问题当分别开发模块时，容易出资源重复命名的问题，可以在build.gradle中设置resourcePrefix \"module1_\"通过给模块设置不同的资源前缀，可以避免重复命名。</li><li>Activity跳转问题拆分业务代码时，自然会涉及到跨module的Activity跳转，当单独编译时，自然是不能获取到其他模块的引用的。有几种方式可以实现跨模块的唤起Activity：</li></ul><p>隐式启动通过设置intent-filter实现，这需要在manifest中插入大量代码，同时也降低了安全性（其他app就可以通过这种方式随意启动）。通过类名跳转<a href=\"http://kymjs.com/code/2016/10/18/01\" target=\"_blank\">Android业务组件化开发实践</a>提出了一种通过类名跳转的方式，使用脚本生成Rlist类，比较方便快捷，但感觉不方便activity间传递数据。Scheme跳转Scheme的方式是建立映射表，集中处理Activity，这种方式可以传递一定的数据。Activity传递大量数据时可以通过EventBus来进行传递（其实即使通过intent显示启动，也不要把大量数据放置在intent中，intent对数据大小有限制）。在进行本次实践时找到github上的一个url Router，同时支持http和程序内Activity跳转，而且通过注解的方式进行，使用非常方便，于是引入到了项目中。项目地址<a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\">ActivityRouter</a>。<a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\">ActivityRouter</a>的readme中已经有比较详细的wiki，但是还有一些需要注意的：</p><blockquote>依赖问题：</blockquote><p><a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\">ActivityRouter</a>使用了apt方式，因此每个使用的module中均需要设置</p><pre><code>apt \'com.github.mzule.activityrouter:compiler:1.1.5\'</code></pre><p>注意是每个module,在Library module中设置</p><pre><code>classpath \'com.neenbedankt.gradle.plugins:android-apt:1.8\'</code></pre><p>即可。</p><blockquote>多module问题</blockquote><p><a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\">ActivityRouter</a>通过注解在编译时生成mapping，如果多个module设置依赖，就会生成多个java文件，导致源文件重复，编译出错，<a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\">ActivityRouter</a>目前提供了解决方法，但是还没有正式发布版本，可以设置：</p><pre><code>compile \'com.github.mzule.activityrouter:activityrouter:1.1.9\' \napt \'com.github.mzule.activityrouter:compiler:1.1.6\'</code></pre><p>使用。使用在application中注解：</p><pre><code>@Modules({\"app\", \"moduleA\", \"moduleB\"})\npublic class ModularizationApplication extends Application {\n}</code></pre><p>每个module中创建空java类注解：</p><pre><code>@Module(\"moduleA\")\npublic class ModuleA {\n}</code></pre><p>具体可以clone&nbsp;<a href=\"https://github.com/wutongke/ModularizationApp\" target=\"_blank\">ModularizationApp</a>查看代码。</p><h2>编译运行</h2><p>当在gradle.properties中设置IsBuildMudle=true时，可以独立运行每个module，独立运行调试，当设置IsBuildMudle=false，可以编译运行整个project，注意IsBuildMudle变量设置改变时，要对gradle进行sy。</p><p>运行过程中有什么问题可以评论或者在github中提issue。</p><p>参考：<a href=\"http://kymjs.com/code/2016/10/18/01\" target=\"_blank\">http://kymjs.com/code/2016/10/18/01</a><a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\">https://github.com/mzule/ActivityRouter</a><a href=\"https://github.com/liangzhitao/ComponentizationApp\" target=\"_blank\">https://github.com/liangzhitao/ComponentizationApp</a></p><p></p><h2>Other</h2><p><br></p>', 'Android项目中代码量达到一定程度，编译将是一件非常痛苦的事情，短则一两分钟，长则达到五六分钟。Android studio推出instant run由于各种缺陷一般情况下是被关闭的……', null, null, '', '2016-12-15 12:47:57', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('8', '28岁时转行成为一名程序媛是怎样的一种体验？', '<p><img src=\"http://upload-images.jianshu.io/upload_images/1095187-f93e687b32ae019b.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>图片来源于网络</p><p>昨天下班时路过人事办公室的门口，刚好一名招聘妹子从里面走出来对自己的同伴说：“如果我再年轻五岁，那么我也学习技术去，常见的电脑问题都可以自己搞定，再也不用求人。”招聘妹子充其量不过25岁。</p><p>说者无心，听者有意，我在心里默默补充了一句：无论如何你也回不到五年前了，但是如果真的想学，从现在学起，五年后说不定你就是一枚大牛；不开始说不定五年后你还会感慨，要是那时候学编程就好了。我想起了一年前的那段准备转行的纠结时光。</p><p>先交代一下我的教育背景，15年6月份非211企业管理硕士毕业，高考时复读了一年，毕业时已经是27岁。毕业后，我便顺理成章的找了一份专业相关的人事的工作。不能说人事没有前途，我不太喜欢那些和人打交道的繁杂工作，更何况，在我心里一直都还有一份技术梦。两个多月之后，我果断辞职了。</p><p>之后是漫长的几个月的待业期，由于家里面有些事情，便拖延了一段时间。在这几个月里，我给自己想了无数条路，一时觉得条条大路通罗马，觉得自己未来的人生还有无数种可能；一时又会陷入深深的自我怀疑之中，觉得自己一无是处。从15年10月份开始，我便一直在想自己到底要走怎样的一条路，人事、猎头、供应链、运营、数据分析、程序员……，中间陆陆续续在面试，我也拿到了几份offer，可是怎么也定不下来自己要从事什么行业。</p><p>其实，从我的内心来说，我还是想做一名程序员的。可是，我衡量了一下自己的处境：27岁，等学完都28了，我还能找到工作吗？那段时间我天天在知乎和百度知道上泡着，寻找类似于“28岁转行做程序员，靠谱吗？”，“30岁以后女程序员的职业上升空间”这样问题的答案。这种状态持续了大概有两个月的时间。</p><p>一个人呀，能问出自己这样的问题，其实答案早已经在他心中。他所有的寻找答案的过程，无非是给自己一个心安，让自己可以义无反顾的去做这件事。我就是这样，如果我想去干别的工作的话，早挑一份薪资还可以的上班去了，何苦在这件事纠结不定呢？如果有一件事占据了你全部的心神，让你已经没有心思将注意力转向别处，但是你却迟迟下不了决心自己到底要不要去做，那么还是早些行动吧！你纠结，无非是害怕自己浪费时间，付出了却没有回报，却没有意识到，纠结这个行为本身就是在浪费时间。这些纠结的时光，于你没有任何益处，将这些时间利用起来，你已经走了很远，要知道从行动中得出来的答案要比你一个人空想靠谱的多。先行动，再决定。行动之后再放弃也不晚。</p><p>时间一直持续到了16年的1月份，我28了。有一天吃完晚饭在小区里散步，遇见一位满头华发的老大爷，口中念念有词在说些什么，当时离得有点远，我没听清楚。我特意追上他，距离他有两三步的距离，原来他在被英语。我的脚步像被钉在了地上，再也挪不动，那一刻，我释然了，我在怕什么呢？70岁的大爷还能学英语，为什么我就不能学敲代码呢？三个月的时间，足够我入门。</p><p>在我下定决心做程序猿时，我只知道C语言和C++开头有一个＃include，认识几个HTML标签，至于数组、变量、循环，鬼才知道那是什么东西。WEB前端工程师，是我给自己定的职业方向。当初做毕业设计的时候，写的是一个静态页面，一点动态效果都没有，一直以来对于网页我都非常有好感。但由于自己学的文科专业，想着以后的工作肯定和网页八杆子打不着，读研时大把的时间都用来挥洒青春了。</p><p>在择业时，有的同学会有这样的误区：自己学的什么专业，以后就要从事专业相关的工作，否则自己的大学就白上了。人是活的，专业是死的，假如碰上了一个自己不太喜欢的专业，将自己困死在那个专业里岂不是太傻了吗？</p><p>我从网上找来《head first html and css》这本书，花了一个星期的时间，将代码从头到尾敲了一遍，对于HTML和CSS，以及页面布局有了最基本的认知。这时，我在纠结要不要报培训班。最后，还是去了，其实没指望培训班的老师能够教自己多少东西，只是希望有那么一个环境能束缚自己，有一群人陪着，让自己知道我不孤单。</p><p>师傅领进门，修行在个人。许多自学成才的程序员看不起培训班里出来的，我特别能理解，因为我知道在那里面的学生就像被催熟的水果，自学能力差的要命。在培训班的四个月，我是一个孤独的行者，我坚定地告诉自己，我来这里，是因为我想学习编程。在那里学习到的知识，繁多且杂乱，学的一头雾水，往往是知其然而不知其所以然。我学习的那门编程语言叫JS，又学了几个相关的框架。白天知识消化不了，只能晚上回家啃书。磕磕绊绊，怎么也算入了门。</p><p>当我看到眼前的一行行代码在浏览器中运行之后，展示出来的绚丽效果，我会打心眼里的高兴。用JS做的星空图，CSS3的叮当猫，烧烤架……</p><p>培训班的课程还没有结束，我已经找到了工作，五月份我便从那里离开了。从培训班到工作岗位，又是完全不同的体验。到现在，我换了两个项目组，每到一个新项目组都要从头开始学，HIVE、SQL、JAVA，这些东西没有人教，都要自己学。</p><p>那些看着需求做不出来梦里都在写代码的日子，那些面对着空荡荡的办公室只有我一个人在加班的日子，痛并快乐着，我还在飞速的成长。</p><p>转行做一枚程序媛，给我来带的并不仅仅是一份工作那么简单。它圆了我的一个梦，还有一个全新的世界，一个不同于感性的文科生思维的世界。我不再惧怕任何新生事物，自己不会的东西，那就学呗，有什么大不了的。</p><p></p><p>悄悄的告诉你哦，WINDOWS系统的右下角点击一下，可以显示桌面；ALT＋TAB键可以在不同的任务间切换；一个U盘可以装系统，跟着教程，傻瓜式操作，你也可以学会；你还可以自己做一个特别方便的小工具；还可以用代码画画哦……</p><p><br></p>', '先交代一下我的教育背景，15年6月份非211企业管理硕士毕业，高考时复读了一年，毕业时已经是27岁。毕业后，我便顺理成章的找了一份专业相关的人事的工作。不能说人事没有前途，我不太喜欢那些和人打交道的繁杂工作，更何况，在我心里一直都还有一份技术梦。两个多月之后，我果断辞职了。\r\n\r\n之后是漫长的几个月的待业期，由于家里面有些事情，便拖延了一段时间。在这几个月里，我给自己想了无数条路，一时觉得条条大路通罗马，觉得自己未来的人生还有无数种可能；一时又会陷入深深的自我怀疑之中，觉得自己一无是处。从15年10月份开始，我便一直在想自己到底要走怎样的一条路，人事、猎头、供应链、运营、数据分析、程序员……，中间陆陆续续在面试，我也拿到了几份offer，可是怎么也定不下来自己要从事什么行业。\r\n\r\n其实，从我的内心来说，我还是想做一名程序员的。可是，我衡量了一下自己的处境：27岁，等学完都28了，我还能找到工作吗？那段时间我天天在知乎和百度知道上泡着，寻找类似于“28岁转行做程序员，靠谱吗？”，“30岁以后女程序员的职业上升空间”这样问题的答案。这种状态持续了大概有两个月的时间。', null, null, '', '2016-09-22 14:40:35', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('9', '近5年133个Java面试问题列表', 'wangEditor.min.js:2 wangEditor提示: 本页面富文本编辑器由 wangEditor 提供 http://wangeditor.github.io/ \nwangEditor.min.js:2 wangEditor提示: 正在处理 微博表情 表情的数据...\nwangEditor.min.js:2 wangEditor提示: 建议在配置中自定义百度地图的mapAk，否则可能影响地图功能，文档：http://www.kancloud.cn/wangfupeng/wangeditor2/113961\na.(anonymous function) @ wangEditor.min.js:2\nm.onRender @ wangEditor.min.js:3\nc.fn.render @ wangEditor.min.js:2\n(anonymous) @ wangEditor.min.js:4\neach @ jquery-1.10.2.min.js:4\na.fn.renderMenus @ wangEditor.min.js:4\na.fn.create @ wangEditor.min.js:2\n(anonymous) @ wangeditor.html?_ijt=dk6k1dcr3633o4ehmpkjbmh53s:26\nwangeditor.html?_ijt=dk6k1dcr3633o4ehmpkjbmh53s:30 html：\n    <p>Java 面试随着时间的改变而改变。在过去的日子里，当你知道 String 和 StringBuilder 的区别就能让你直接进入第二轮面试，但是现在问题变得越来越高级，面试官问的问题也更深入。 在我初入职场的时候，类似于 Vector 与 Array 的区别、HashMap 与 Hashtable 的区别是最流行的问题，只需要记住它们，就能在面试中获得更好的机会，但这种情形已经不复存在。如今，你将会被问到许多 Java 程序员都没有看过的领域，如 NIO，设计模式，成熟的单元测试，或者那些很难掌握的知识，如并发、算法、数据结构及编码。</p><p>由于我喜欢研究面试题，因此我已经收集了许多的面试问题，包括许多许多不同的主题。我已经为这众多的问题准备一段时间了，现在我将它们分享给你们。这里面不但包含经典的面试问题，如线程、集合、equals 和 hashcode、socket，而且还包含了 NIO、数组、字符串、Java 8 等主题。</p><p>该列表包含了入门级 Java 程序员和多年经验的高级开发者的问题。无论你是 1、2、3、4、5、6、7、8、9 还是 10 年经验的开发者，你都能在其中找到一些有趣的问题。这里包含了一些超级容易回答的问题，同时包含经验丰富的 Java 程序员也会棘手的问题。</p><p>当然你们也是非常幸运的，当今有许多好的书来帮助你准备 Java 面试，其中有一本我觉得特别有用和有趣的是 Markham 的 Java 程序面试揭秘（Java Programming Interview Exposed）。 这本书会告诉你一些 Java 和 JEE 面试中最重要的主题，即使你不是准备 Java 面试，也值得一读。</p><p>该问题列表特别长，我们有各个地方的问题，所以，答案必须要短小、简洁、干脆，不拖泥带水。因此，除了这一个段落，你只会听到问题与答案，再无其他内容，没有反馈，也没有评价。为此，我已经写好了一些博文，在这些文章中你可以找到我对某些问题的观点，如我为什么喜欢这个问题，这个问题的挑战是什么？期望从面试者那获取到什么样的答案？</p><p>这个列表有一点不同，我鼓励你采用类似的方式去分享问题和答案，这样容易温习。我希望这个列表对面试官和候选人都有很好的用处，面试官可以对这些问题上做一些改变以获取新奇和令人惊奇的元素，这对一次好的面试来说非常重要。而候选者，可以扩展和测试 Java 程序语言和平台关键领域的知识。2015 年，会更多的关注并发概念，JVM 内部，32 位 JVM 和 64 JVM的区别，单元测试及整洁的代码。我确信，如果你读过这个庞大的 Java 面试问题列表，无论是电话面试还是面对面的面试，你都能有很好的表现。</p><p>Java 面试中的重要话题</p><p>除了你看到的惊人的问题数量，我也尽量保证质量。我不止一次分享各个重要主题中的问题，也确保包含所谓的高级话题，这些话题很多程序员不喜欢准备或者直接放弃，因为他们的工作不会涉及到这些。Java NIO 和 JVM 底层就是最好的例子。你也可以将设计模式划分到这一类中，但是越来越多有经验的程序员了解 GOF 设计模式并应用这些模式。我也尽量在这个列表中包含 2015 年最新的面试问题，这些问题可能是来年关注的核心。为了给你一个大致的了解,下面列出这份 Java 面试问题列表包含的主题：</p><p>多线程，并发及线程基础数据类型转换的基本原则垃圾回收（GC）Java 集合框架数组字符串GOF 设计模式SOLID （单一功能、开闭原则、里氏替换、接口隔离以及依赖反转）设计原则抽象类与接口Java 基础，如 equals 和 hashcode泛型与枚举Java IO 与 NIO常用网络协议Java 中的数据结构和算法正则表达式JVM 底层Java 最佳实践JDBCDate, Time 与 CalendarJava 处理 XMLJUnit编程</p><p>120 大 Java 面试题及答案</p><p>现在是时候给你展示我近 5 年从各种面试中收集来的 120 个问题了。我确定你在自己的面试中见过很多这些问题，很多问题你也能正确回答。</p><p>多线程、并发及线程的基础问题</p><p>1）Java 中能创建 Volatile 数组吗？能，Java 中可以创建 volatile 类型数组，不过只是一个指向数组的引用，而不是整个数组。我的意思是，如果改变引用指向的数组，将会受到 volatile 的保护，但是如果多个线程同时改变数组的元素，volatile 标示符就不能起到之前的保护作用了。</p><p>2）volatile 能使得一个非原子操作变成原子操作吗？一个典型的例子是在类中有一个 long 类型的成员变量。如果你知道该成员变量会被多个线程访问，如计数器、价格等，你最好是将其设置为 volatile。为什么？因为 Java 中读取 long 类型变量不是原子的，需要分成两步，如果一个线程正在修改该 long 变量的值，另一个线程可能只能看到该值的一半（前 32 位）。但是对一个 volatile 型的 long 或 double 变量的读写是原子。</p><p>3）volatile 修饰符的有过什么实践？一种实践是用 volatile 修饰 long 和 double 变量，使其能按原子类型来读写。double 和 long 都是64位宽，因此对这两种类型的读是分为两部分的，第一次读取第一个 32 位，然后再读剩下的 32 位，这个过程不是原子的，但 Java 中 volatile 型的 long 或 double 变量的读写是原子的。volatile 修复符的另一个作用是提供内存屏障（memory barrier），例如在分布式框架中的应用。简单的说，就是当你写一个 volatile 变量之前，Java 内存模型会插入一个写屏障（write barrier），读一个 volatile 变量之前，会插入一个读屏障（read barrier）。意思就是说，在你写一个 volatile 域时，能保证任何线程都能看到你写的值，同时，在写之前，也能保证任何数值的更新对所有线程是可见的，因为内存屏障会将其他所有写的值更新到缓存。</p><p>4）volatile 类型变量提供什么保证？(答案)volatile 变量提供顺序和可见性保证，例如，JVM 或者 JIT为了获得更好的性能会对语句重排序，但是 volatile 类型变量即使在没有同步块的情况下赋值也不会与其他语句重排序。 volatile 提供 happens-before 的保证，确保一个线程的修改能对其他线程是可见的。某些情况下，volatile 还能提供原子性，如读 64 位数据类型，像 long 和 double 都不是原子的，但 volatile 类型的 double 和 long 就是原子的。</p><p>5) 10 个线程和 2 个线程的同步代码，哪个更容易写？从写代码的角度来说，两者的复杂度是相同的，因为同步代码与线程数量是相互独立的。但是同步策略的选择依赖于线程的数量，因为越多的线程意味着更大的竞争，所以你需要利用同步技术，如锁分离，这要求更复杂的代码和专业知识。</p><p>6）你是如何调用 wait（）方法的？使用 if 块还是循环？为什么？(答案)wait() 方法应该在循环调用，因为当线程获取到 CPU 开始执行的时候，其他条件可能还没有满足，所以在处理前，循环检测条件是否满足会更好。下面是一段标准的使用 wait 和 notify 方法的代码：</p><pre><code>// The standard idiom for using the wait method\nsynchronized (obj) {\nwhile (condition does not hold)\nobj.wait(); // (Releases lock, and reacquires on wakeup)\n... // Perform action appropriate to condition\n}</code></pre><p>参见 Effective Java 第 69 条，获取更多关于为什么应该在循环中来调用 wait 方法的内容。</p><p>7）什么是多线程环境下的伪共享（false sharing）？伪共享是多线程系统（每个处理器有自己的局部缓存）中一个众所周知的性能问题。伪共享发生在不同处理器的上的线程对变量的修改依赖于相同的缓存行，如下图所示：</p><p><img src=\"http://upload-images.jianshu.io/upload_images/1807893-eb811f56806ff263?imageMogr2/auto-orient/strip\"><br></p><p>伪共享</p><p>有经验程序员的 Java 面试题</p><p>伪共享问题很难被发现，因为线程可能访问完全不同的全局变量，内存中却碰巧在很相近的位置上。如其他诸多的并发问题，避免伪共享的最基本方式是仔细审查代码，根据缓存行来调整你的数据结构。</p><p>8）什么是 Busy spin？我们为什么要使用它？Busy spin 是一种在不释放 CPU 的基础上等待事件的技术。它经常用于避免丢失 CPU 缓存中的数据（如果线程先暂停，之后在其他CPU上运行就会丢失）。所以，如果你的工作要求低延迟，并且你的线程目前没有任何顺序，这样你就可以通过循环检测队列中的新消息来代替调用 sleep() 或 wait() 方法。它唯一的好处就是你只需等待很短的时间，如几微秒或几纳秒。LMAX 分布式框架是一个高性能线程间通信的库，该库有一个 BusySpinWaitStrategy 类就是基于这个概念实现的，使用 busy spin 循环 EventProcessors 等待屏障。</p><p>9）Java 中怎么获取一份线程 dump 文件？在 Linux 下，你可以通过命令 kill -3 PID （Java 进程的进程 ID）来获取 Java 应用的 dump 文件。在 Windows 下，你可以按下 Ctrl + Break 来获取。这样 JVM 就会将线程的 dump 文件打印到标准输出或错误文件中，它可能打印在控制台或者日志文件中，具体位置依赖应用的配置。如果你使用Tomcat。</p><p>10）Swing 是线程安全的？(答案)不是，Swing 不是线程安全的。你不能通过任何线程来更新 Swing 组件，如 JTable、JList 或 JPanel，事实上，它们只能通过 GUI 或 AWT 线程来更新。这就是为什么 Swing 提供 invokeAndWait() 和 invokeLater() 方法来获取其他线程的 GUI 更新请求。这些方法将更新请求放入 AWT 的线程队列中，可以一直等待，也可以通过异步更新直接返回结果。你也可以在参考答案中查看和学习到更详细的内容。</p><p>11）什么是线程局部变量？(答案)线程局部变量是局限于线程内部的变量，属于线程自身所有，不在多个线程间共享。Java 提供 ThreadLocal 类来支持线程局部变量，是一种实现线程安全的方式。但是在管理环境下（如 web 服务器）使用线程局部变量的时候要特别小心，在这种情况下，工作线程的生命周期比任何应用变量的生命周期都要长。任何线程局部变量一旦在工作完成后没有释放，Java 应用就存在内存泄露的风险。</p><p>12）用 wait-notify 写一段代码来解决生产者-消费者问题？(答案)请参考答案中的示例代码。只要记住在同步块中调用 wait() 和 notify()方法，如果阻塞，通过循环来测试等待条件。</p><p>13) 用 Java 写一个线程安全的单例模式（Singleton）？(答案)请参考答案中的示例代码，这里面一步一步教你创建一个线程安全的 Java 单例类。当我们说线程安全时，意思是即使初始化是在多线程环境中，仍然能保证单个实例。Java 中，使用枚举作为单例类是最简单的方式来创建线程安全单例模式的方式。</p><p>14）Java 中 sleep 方法和 wait 方法的区别？(答案)虽然两者都是用来暂停当前运行的线程，但是 sleep() 实际上只是短暂停顿，因为它不会释放锁，而 wait() 意味着条件等待，这就是为什么该方法要释放锁，因为只有这样，其他等待的线程才能在满足条件时获取到该锁。</p><p>15）什么是不可变对象（immutable object）？Java 中怎么创建一个不可变对象？(答案)不可变对象指对象一旦被创建，状态就不能再改变。任何修改都会创建一个新的对象，如 String、Integer及其它包装类。详情参见答案，一步一步指导你在 Java 中创建一个不可变的类。</p><p>16）我们能创建一个包含可变对象的不可变对象吗？是的，我们是可以创建一个包含可变对象的不可变对象的，你只需要谨慎一点，不要共享可变对象的引用就可以了，如果需要变化时，就返回原对象的一个拷贝。最常见的例子就是对象中包含一个日期对象的引用。</p><p>数据类型和 Java 基础面试问题</p><p>17）Java 中应该使用什么数据类型来代表价格？(答案)如果不是特别关心内存和性能的话，使用BigDecimal，否则使用预定义精度的 double 类型。</p><p>18）怎么将 byte 转换为 String？(答案)可以使用 String 接收 byte[] 参数的构造器来进行转换，需要注意的点是要使用的正确的编码，否则会使用平台默认编码，这个编码可能跟原来的编码相同，也可能不同。</p><p>19）Java 中怎样将 bytes 转换为 long 类型？这个问题你来回答 :-)20）我们能将 int 强制转换为 byte 类型的变量吗？如果该值大于 byte 类型的范围，将会出现什么现象？是的，我们可以做强制转换，但是 Java 中 int 是 32 位的，而 byte 是 8 位的，所以，如果强制转化是，int 类型的高 24 位将会被丢弃，byte 类型的范围是从 -128 到 128。</p><p>21）存在两个类，B 继承 A，C 继承 B，我们能将 B 转换为 C 么？如 C = (C) B；(answer答案)</p><p>22）哪个类包含 clone 方法？是 Cloneable 还是 Object？(答案)java.lang.Cloneable 是一个标示性接口，不包含任何方法，clone 方法在 object 类中定义。并且需要知道 clone() 方法是一个本地方法，这意味着它是由 c 或 c++ 或 其他本地语言实现的。</p><p>23）Java 中 ++ 操作符是线程安全的吗？(答案)23）不是线程安全的操作。它涉及到多个指令，如读取变量值，增加，然后存储回内存，这个过程可能会出现多个线程交差。</p><p>24）a = a + b 与 a += b 的区别(答案)+= 隐式的将加操作的结果类型强制转换为持有结果的类型。如果两这个整型相加，如 byte、short 或者 int，首先会将它们提升到 int 类型，然后在执行加法操作。如果加法操作的结果比 a 的最大值要大，则 a+b 会出现编译错误，但是 a += b 没问题，如下：byte a = 127;byte b = 127;b = a + b; // error : cannot convert from int to byteb += a; // ok（译者注：这个地方应该表述的有误，其实无论 a+b 的值为多少，编译器都会报错，因为 a+b 操作会将 a、b 提升为 int 类型，所以将 int 类型赋值给 byte 就会编译出错）</p><p>25）我能在不进行强制转换的情况下将一个 double 值赋值给 long 类型的变量吗？(答案)不行，你不能在没有强制类型转换的前提下将一个 double 值赋值给 long 类型的变量，因为 double 类型的范围比 long 类型更广，所以必须要进行强制转换。</p><p>26）3*0.1 == 0.3 将会返回什么？true 还是 false？(答案)false，因为有些浮点数不能完全精确的表示出来。</p><p>27）int 和 Integer 哪个会占用更多的内存？(答案)Integer 对象会占用更多的内存。Integer 是一个对象，需要存储对象的元数据。但是 int 是一个原始类型的数据，所以占用的空间更少。</p><p>28）为什么 Java 中的 String 是不可变的（Immutable）？(answer答案)Java 中的 String 不可变是因为 Java 的设计者认为字符串使用非常频繁，将字符串设置为不可变可以允许多个客户端之间共享相同的字符串。更详细的内容参见答案。</p><p>29）我们能在 Switch 中使用 String 吗？(answer答案)从 Java 7 开始，我们可以在 switch case 中使用字符串，但这仅仅是一个语法糖。内部实现在 switch 中使用字符串的 hash code。</p><p>30）Java 中的构造器链是什么？(answer答案)当你从一个构造器中调用另一个构造器，就是Java 中的构造器链。这种情况只在重载了类的构造器的时候才会出现。</p><p>JVM 底层 与 GC（Garbage Collection） 的面试问题</p><p>31）64 位 JVM 中，int 的长度是多数？Java 中，int 类型变量的长度是一个固定值，与平台无关，都是 32 位。意思就是说，在 32 位 和 64 位 的Java 虚拟机中，int 类型的长度是相同的。</p><p>32）Serial 与 Parallel GC之间的不同之处？(答案)Serial 与 Parallel 在GC执行的时候都会引起 stop-the-world。它们之间主要不同 serial 收集器是默认的复制收集器，执行 GC 的时候只有一个线程，而 parallel 收集器使用多个 GC 线程来执行。</p><p>33）32 位和 64 位的 JVM，int 类型变量的长度是多数？(答案)32 位和 64 位的 JVM 中，int 类型变量的长度是相同的，都是 32 位或者 4 个字节。</p><p>34）Java 中 WeakReference 与 SoftReference的区别？(答案)虽然 WeakReference 与 SoftReference 都有利于提高 GC 和 内存的效率，但是 WeakReference ，一旦失去最后一个强引用，就会被 GC 回收，而软引用虽然不能阻止被回收，但是可以延迟到 JVM 内存不足的时候。</p><p>35）WeakHashMap 是怎么工作的？(答案)WeakHashMap 的工作与正常的 HashMap 类似，但是使用弱引用作为 key，意思就是当 key 对象没有任何引用时，key/value 将会被回收。</p><p>36）JVM 选项 -XX:+UseCompressedOops 有什么作用？为什么要使用？(答案)当你将你的应用从 32 位的 JVM 迁移到 64 位的 JVM 时，由于对象的指针从 32 位增加到了 64 位，因此堆内存会突然增加，差不多要翻倍。这也会对 CPU 缓存（容量比内存小很多）的数据产生不利的影响。因为，迁移到 64 位的 JVM 主要动机在于可以指定最大堆大小，通过压缩 OOP 可以节省一定的内存。通过 -XX:+UseCompressedOops 选项，JVM 会使用 32 位的 OOP，而不是 64 位的 OOP。</p><p>37）怎样通过 Java 程序来判断 JVM 是 32 位 还是 64 位？(答案)你可以检查某些系统属性如 sun.arch.data.model 或 os.arch 来获取该信息。</p><p>38）32 位 JVM 和 64 位 JVM 的最大堆内存分别是多数？(答案)理论上说上 32 位的 JVM 堆内存可以到达 2^32，即 4GB，但实际上会比这个小很多。不同操作系统之间不同，如 Windows 系统大约 1.5 GB，Solaris 大约 3GB。64 位 JVM允许指定最大的堆内存，理论上可以达到 2^64，这是一个非常大的数字，实际上你可以指定堆内存大小到 100GB。甚至有的 JVM，如 Azul，堆内存到 1000G 都是可能的。</p><p>39）JRE、JDK、JVM 及 JIT 之间有什么不同？(答案)JRE 代表 Java 运行时（Java run-time），是运行 Java 引用所必须的。JDK 代表 Java 开发工具（Java development kit），是 Java 程序的开发工具，如 Java 编译器，它也包含 JRE。JVM 代表 Java 虚拟机（Java virtual machine），它的责任是运行 Java 应用。JIT 代表即时编译（Just In Time compilation），当代码执行的次数超过一定的阈值时，会将 Java 字节码转换为本地代码，如，主要的热点代码会被准换为本地代码，这样有利大幅度提高 Java 应用的性能。最近5年133个Java面试问题列表</p><p>3 年工作经验的 Java 面试题</p><p>40）解释 Java 堆空间及 GC？(答案)当通过 Java 命令启动 Java 进程的时候，会为它分配内存。内存的一部分用于创建堆空间，当程序中创建对象的时候，就从对空间中分配内存。GC 是 JVM 内部的一个进程，回收无效对象的内存用于将来的分配。最近5年133个Java面试问题列表</p><p>JVM 底层面试题及答案</p><p>41）你能保证 GC 执行吗？(答案)不能，虽然你可以调用 System.gc() 或者 Runtime.gc()，但是没有办法保证 GC 的执行。</p><p>42）怎么获取 Java 程序使用的内存？堆使用的百分比？可以通过 java.lang.Runtime 类中与内存相关方法来获取剩余的内存，总内存及最大堆内存。通过这些方法你也可以获取到堆使用的百分比及堆内存的剩余空间。Runtime.freeMemory() 方法返回剩余空间的字节数，Runtime.totalMemory() 方法总内存的字节数，Runtime.maxMemory() 返回最大内存的字节数。</p><p>43）Java 中堆和栈有什么区别？(答案)JVM 中堆和栈属于不同的内存区域，使用目的也不同。栈常用于保存方法帧和局部变量，而对象总是在堆上分配。栈通常都比堆小，也不会在多个线程之间共享，而堆被整个 JVM 的所有线程共享。</p><p>最近5年133个Java面试问题列表</p><p>关于内存的的面试问题和答案</p><p>Java 基本概念面试题</p><p>44）“a==b”和”a.equals(b)”有什么区别？(答案)如果 a 和 b 都是对象，则 a==b 是比较两个对象的引用，只有当 a 和 b 指向的是堆中的同一个对象才会返回 true，而 a.equals(b) 是进行逻辑比较，所以通常需要重写该方法来提供逻辑一致性的比较。例如，String 类重写 equals() 方法，所以可以用于两个不同对象，但是包含的字母相同的比较。</p><p>45）a.hashCode() 有什么用？与 a.equals(b) 有什么关系？(答案)hashCode() 方法是相应对象整型的 hash 值。它常用于基于 hash 的集合类，如 Hashtable、HashMap、LinkedHashMap等等。它与 equals() 方法关系特别紧密。根据 Java 规范，两个使用 equal() 方法来判断相等的对象，必须具有相同的 hash code。</p><p>46）final、finalize 和 finally 的不同之处？(答案)final 是一个修饰符，可以修饰变量、方法和类。如果 final 修饰变量，意味着该变量的值在初始化后不能被改变。finalize 方法是在对象被回收之前调用的方法，给对象自己最后一个复活的机会，但是什么时候调用 finalize 没有保证。finally 是一个关键字，与 try 和 catch 一起用于异常的处理。finally 块一定会被执行，无论在 try 块中是否有发生异常。</p><p>47）Java 中的编译期常量是什么？使用它又什么风险？公共静态不可变（public static final ）变量也就是我们所说的编译期常量，这里的 public 可选的。实际上这些变量在编译时会被替换掉，因为编译器知道这些变量的值，并且知道这些变量在运行时不能改变。这种方式存在的一个问题是你使用了一个内部的或第三方库中的公有编译时常量，但是这个值后面被其他人改变了，但是你的客户端仍然在使用老的值，甚至你已经部署了一个新的jar。为了避免这种情况，当你在更新依赖 JAR 文件时，确保重新编译你的程序。</p><p>Java 集合框架的面试题</p><p>这部分也包含数据结构、算法及数组的面试问题</p><p>48) List、Set、Map 和 Queue 之间的区别(答案)List 是一个有序集合，允许元素重复。它的某些实现可以提供基于下标值的常量访问时间，但是这不是 List 接口保证的。Set 是一个无序集合。</p><p>49）poll() 方法和 remove() 方法的区别？poll() 和 remove() 都是从队列中取出一个元素，但是 poll() 在获取元素失败的时候会返回空，但是 remove() 失败的时候会抛出异常。</p><p>50）Java 中 LinkedHashMap 和 PriorityQueue 的区别是什么？(答案)PriorityQueue 保证最高或者最低优先级的的元素总是在队列头部，但是 LinkedHashMap 维持的顺序是元素插入的顺序。当遍历一个 PriorityQueue 时，没有任何顺序保证，但是 LinkedHashMap 课保证遍历顺序是元素插入的顺序。</p><p>51）ArrayList 与 LinkedList 的不区别？(答案)最明显的区别是 ArrrayList 底层的数据结构是数组，支持随机访问，而 LinkedList 的底层数据结构书链表，不支持随机访问。使用下标访问一个元素，ArrayList 的时间复杂度是 O(1)，而 LinkedList 是 O(n)。更多细节的讨论参见答案。</p><p>52）用哪两种方式来实现集合的排序？(答案)你可以使用有序集合，如 TreeSet 或 TreeMap，你也可以使用有顺序的的集合，如 list，然后通过 Collections.sort() 来排序。</p><p>53）Java 中怎么打印数组？(answer答案)你可以使用 Arrays.toString() 和 Arrays.deepToString() 方法来打印数组。由于数组没有实现 toString() 方法，所以如果将数组传递给 System.out.println() 方法，将无法打印出数组的内容，但是 Arrays.toString() 可以打印每个元素。</p><p>54）Java 中的 LinkedList 是单向链表还是双向链表？(答案)是双向链表，你可以检查 JDK 的源码。在 Eclipse，你可以使用快捷键 Ctrl + T，直接在编辑器中打开该类。</p><p>55）Java 中的 TreeMap 是采用什么树实现的？(答案)Java 中的 TreeMap 是使用红黑树实现的。</p><p>56) Hashtable 与 HashMap 有什么不同之处？(答案)这两个类有许多不同的地方，下面列出了一部分：a) Hashtable 是 JDK 1 遗留下来的类，而 HashMap 是后来增加的。b）Hashtable 是同步的，比较慢，但 HashMap 没有同步策略，所以会更快。c）Hashtable 不允许有个空的 key，但是 HashMap 允许出现一个 null key。更多的不同之处参见答案。</p><p>57）Java 中的 HashSet，内部是如何工作的？(answer答案)HashSet 的内部采用 HashMap来实现。由于 Map 需要 key 和 value，所以所有 key 的都有一个默认 value。类似于 HashMap，HashSet 不允许重复的 key，只允许有一个null key，意思就是 HashSet 中只允许存储一个 null 对象。</p><p>58）写一段代码在遍历 ArrayList 时移除一个元素？(答案)该问题的关键在于面试者使用的是 ArrayList 的 remove() 还是 Iterator 的 remove()方法。这有一段示例代码，是使用正确的方式来实现在遍历的过程中移除元素，而不会出现 ConcurrentModificationException 异常的示例代码。</p><p>59）我们能自己写一个容器类，然后使用 for-each 循环码？可以，你可以写一个自己的容器类。如果你想使用 Java 中增强的循环来遍历，你只需要实现 Iterable 接口。如果你实现 Collection 接口，默认就具有该属性。</p><p>60）ArrayList 和 HashMap 的默认大小是多数？(答案)</p><p>在 Java 7 中，ArrayList 的默认大小是 10 个元素，HashMap 的默认大小是16个元素（必须是2的幂）。这就是 Java 7 中 ArrayList 和 HashMap 类的代码片段：</p><p>// from ArrayList.java JDK 1.7private static final int DEFAULT_CAPACITY = 10;</p><p>//from HashMap.java JDK 7static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 1661）有没有可能两个不相等的对象有有相同的 hashcode？有可能，两个不相等的对象可能会有相同的 hashcode 值，这就是为什么在 hashmap 中会有冲突。相等 hashcode 值的规定只是说如果两个对象相等，必须有相同的hashcode 值，但是没有关于不相等对象的任何规定。</p><p>62）两个相同的对象会有不同的的 hash code 吗？不能，根据 hash code 的规定，这是不可能的。</p><p>63）我们可以在 hashcode() 中使用随机数字吗？(答案)不行，因为对象的 hashcode 值必须是相同的。参见答案获取更多关于 Java 中重写 hashCode() 方法的知识。</p><p>64）Java 中，Comparator 与 Comparable 有什么不同？(答案)Comparable 接口用于定义对象的自然顺序，而 comparator 通常用于定义用户定制的顺序。Comparable 总是只有一个，但是可以有多个 comparator 来定义对象的顺序。</p><p>65）为什么在重写 equals 方法的时候需要重写 hashCode 方法？(答案)因为有强制的规范指定需要同时重写 hashcode 与 equal 是方法，许多容器类，如 HashMap、HashSet 都依赖于 hashcode 与 equals 的规定。</p><p>Java IO 和 NIO 的面试题</p><p>IO 是 Java 面试中一个非常重要的点。你应该很好掌握 Java IO，NIO，NIO2 以及与操作系统，磁盘 IO 相关的基础知识。下面是 Java IO 中经常问的问题。</p><p>66）在我 Java 程序中，我有三个 socket，我需要多少个线程来处理？</p><p>67）Java 中怎么创建 ByteBuffer？</p><p>68）Java 中，怎么读写 ByteBuffer ？</p><p>69）Java 采用的是大端还是小端？</p><p>70）ByteBuffer 中的字节序是什么？</p><p>71）Java 中，直接缓冲区与非直接缓冲器有什么区别？(答案)</p><p>72）Java 中的内存映射缓存区是什么？(answer答案)</p><p>73）socket 选项 TCP NO DELAY 是指什么？</p><p>74）TCP 协议与 UDP 协议有什么区别？(answer答案)</p><p>75）Java 中，ByteBuffer 与 StringBuffer有什么区别？(答案)</p><p>Java 最佳实践的面试问题</p><p>包含 Java 中各个部分的最佳实践，如集合，字符串，IO，多线程，错误和异常处理，设计模式等等。</p><p>76）Java 中，编写多线程程序的时候你会遵循哪些最佳实践？(答案)这是我在写Java 并发程序的时候遵循的一些最佳实践：a）给线程命名，这样可以帮助调试。b）最小化同步的范围，而不是将整个方法同步，只对关键部分做同步。c）如果可以，更偏向于使用 volatile 而不是 synchronized。d）使用更高层次的并发工具，而不是使用 wait() 和 notify() 来实现线程间通信，如 BlockingQueue，CountDownLatch 及 Semeaphore。e）优先使用并发集合，而不是对集合进行同步。并发集合提供更好的可扩展性。</p><p>77）说出几点 Java 中使用 Collections 的最佳实践(答案)这是我在使用 Java 中 Collectionc 类的一些最佳实践：a）使用正确的集合类，例如，如果不需要同步列表，使用 ArrayList 而不是 Vector。b）优先使用并发集合，而不是对集合进行同步。并发集合提供更好的可扩展性。c）使用接口代表和访问集合，如使用List存储 ArrayList，使用 Map 存储 HashMap 等等。d）使用迭代器来循环集合。e）使用集合的时候使用泛型。</p><p>78）说出至少 5 点在 Java 中使用线程的最佳实践。(答案)这个问题与之前的问题类似，你可以使用上面的答案。对线程来说，你应该：a）对线程命名b）将线程和任务分离，使用线程池执行器来执行 Runnable 或 Callable。c）使用线程池</p><p>79）说出 5 条 IO 的最佳实践(答案)IO 对 Java 应用的性能非常重要。理想情况下，你不应该在你应用的关键路径上避免 IO 操作。下面是一些你应该遵循的 Java IO 最佳实践：a）使用有缓冲区的 IO 类，而不要单独读取字节或字符。b）使用 NIO 和 NIO2c）在 finally 块中关闭流，或者使用 try-with-resource 语句。d）使用内存映射文件获取更快的 IO。</p><p>80）列出 5 个应该遵循的 JDBC 最佳实践(答案)有很多的最佳实践，你可以根据你的喜好来例举。下面是一些更通用的原则：a）使用批量的操作来插入和更新数据b）使用 PreparedStatement 来避免 SQL 异常，并提高性能。c）使用数据库连接池d）通过列名来获取结果集，不要使用列的下标来获取。</p><p>81）说出几条 Java 中方法重载的最佳实践？(答案)下面有几条可以遵循的方法重载的最佳实践来避免造成自动装箱的混乱。a）不要重载这样的方法：一个方法接收 int 参数，而另个方法接收 Integer 参数。b）不要重载参数数量一致，而只是参数顺序不同的方法。c）如果重载的方法参数个数多于 5 个，采用可变参数。</p><p>Date、Time 及 Calendar 的面试题</p><p>82）在多线程环境下，SimpleDateFormat 是线程安全的吗？(答案)不是，非常不幸，DateFormat 的所有实现，包括 SimpleDateFormat 都不是线程安全的，因此你不应该在多线程序中使用，除非是在对外线程安全的环境中使用，如 将 SimpleDateFormat 限制在 ThreadLocal 中。如果你不这么做，在解析或者格式化日期的时候，可能会获取到一个不正确的结果。因此，从日期、时间处理的所有实践来说，我强力推荐 joda-time 库。</p><p>83）Java 中如何格式化一个日期？如格式化为 ddMMyyyy 的形式？(答案)Java 中，可以使用 SimpleDateFormat 类或者 joda-time 库来格式日期。DateFormat 类允许你使用多种流行的格式来格式化日期。参见答案中的示例代码，代码中演示了将日期格式化成不同的格式，如 dd-MM-yyyy 或 ddMMyyyy。</p><p>84）Java 中，怎么在格式化的日期中显示时区？(答案)</p><p>85）Java 中 java.util.Date 与 java.sql.Date 有什么区别？(答案)</p><p>86）Java 中，如何计算两个日期之间的差距？(程序)</p><p>87）Java 中，如何将字符串 YYYYMMDD 转换为日期？(答案)</p><p>单元测试 JUnit 面试题</p><p>89）如何测试静态方法？(答案)可以使用 PowerMock 库来测试静态方法。</p><p>90）怎么利用 JUnit 来测试一个方法的异常？(答案)</p><p>91）你使用过哪个单元测试库来测试你的 Java 程序？(答案)</p><p>92）@Before 和 @BeforeClass 有什么区别？(答案)</p><p>编程和代码相关的面试题</p><p>93）怎么检查一个字符串只包含数字？(解决方案)</p><p>94）Java 中如何利用泛型写一个 LRU 缓存？(答案&lt;)</p><p>95）写一段 Java 程序将 byte 转换为 long？(答案)</p><p>95）在不使用 StringBuffer 的前提下，怎么反转一个字符串？(解决方案)</p><p>97）Java 中，怎么获取一个文件中单词出现的最高频率？(解决方案)</p><p>98）如何检查出两个给定的字符串是反序的？(解决方案)</p><p>99）Java 中，怎么打印出一个字符串的所有排列？(解决方案)</p><p>100）Java 中，怎样才能打印出数组中的重复元素？(解决方案)</p><p>101）Java 中如何将字符串转换为整数？(解决方案)</p><p>102）在没有使用临时变量的情况如何交换两个整数变量的值？(解决方案)</p><p>关于 OOP 和设计模式的面试题</p><p>这部分包含 Java 面试过程中关于 SOLID 的设计原则，OOP 基础，如类，对象，接口，继承，多态，封装，抽象以及更高级的一些概念，如组合、聚合及关联。也包含了 GOF 设计模式的问题。</p><p>103）接口是什么？为什么要使用接口而不是直接使用具体类？接口用于定义 API。它定义了类必须得遵循的规则。同时，它提供了一种抽象，因为客户端只使用接口，这样可以有多重实现，如 List 接口，你可以使用可随机访问的 ArrayList，也可以使用方便插入和删除的 LinkedList。接口中不允许写代码，以此来保证抽象，但是 Java 8 中你可以在接口声明静态的默认方法，这种方法是具体的。</p><p>104）Java 中，抽象类与接口之间有什么不同？(答案)Java 中，抽象类和接口有很多不同之处，但是最重要的一个是 Java 中限制一个类只能继承一个类，但是可以实现多个接口。抽象类可以很好的定义一个家族类的默认行为，而接口能更好的定义类型，有助于后面实现多态机制。关于这个问题的讨论请查看答案。</p><p>105）除了单例模式，你在生产环境中还用过什么设计模式？这需要根据你的经验来回答。一般情况下，你可以说依赖注入，工厂模式，装饰模式或者观察者模式，随意选择你使用过的一种即可。不过你要准备回答接下的基于你选择的模式的问题。</p><p>106）你能解释一下里氏替换原则吗?(答案)</p><p>107) 什么情况下会违反迪米特法则？为什么会有这个问题？(答案)迪米特法则建议“只和朋友说话，不要陌生人说话”，以此来减少类之间的耦合。</p><p>108）适配器模式是什么？什么时候使用？适配器模式提供对接口的转换。如果你的客户端使用某些接口，但是你有另外一些接口，你就可以写一个适配去来连接这些接口。</p><p>109）什么是“依赖注入”和“控制反转”？为什么有人使用？(答案)</p><p>110）抽象类是什么？它与接口有什么区别？你为什么要使用过抽象类？(答案)</p><p>111）构造器注入和 setter 依赖注入，那种方式更好？(答案)每种方式都有它的缺点和优点。构造器注入保证所有的注入都被初始化，但是 setter 注入提供更好的灵活性来设置可选依赖。如果使用 XML 来描述依赖，Setter 注入的可读写会更强。经验法则是强制依赖使用构造器注入，可选依赖使用 setter 注入。</p><p>112）依赖注入和工程模式之间有什么不同？(答案)虽然两种模式都是将对象的创建从应用的逻辑中分离，但是依赖注入比工程模式更清晰。通过依赖注入，你的类就是 POJO，它只知道依赖而不关心它们怎么获取。使用工厂模式，你的类需要通过工厂来获取依赖。因此，使用 DI 会比使用工厂模式更容易测试。关于这个话题的更详细讨论请参见答案。</p><p>113）适配器模式和装饰器模式有什么区别？(答案)虽然适配器模式和装饰器模式的结构类似，但是每种模式的出现意图不同。适配器模式被用于桥接两个接口，而装饰模式的目的是在不修改类的情况下给类增加新的功能。</p><p>114）适配器模式和代理模式之前有什么不同？(答案)这个问题与前面的类似，适配器模式和代理模式的区别在于他们的意图不同。由于适配器模式和代理模式都是封装真正执行动作的类，因此结构是一致的，但是适配器模式用于接口之间的转换，而代理模式则是增加一个额外的中间层，以便支持分配、控制或智能访问。</p><p>115）什么是模板方法模式？(答案)模板方法提供算法的框架，你可以自己去配置或定义步骤。例如，你可以将排序算法看做是一个模板。它定义了排序的步骤，但是具体的比较，可以使用 Comparable 或者其语言中类似东西，具体策略由你去配置。列出算法概要的方法就是众所周知的模板方法。</p><p>116）什么时候使用访问者模式？(答案)访问者模式用于解决在类的继承层次上增加操作，但是不直接与之关联。这种模式采用双派发的形式来增加中间层。</p><p>117）什么时候使用组合模式？(答案)组合模式使用树结构来展示部分与整体继承关系。它允许客户端采用统一的形式来对待单个对象和对象容器。当你想要展示对象这种部分与整体的继承关系时采用组合模式。</p><p>118）继承和组合之间有什么不同？(答案)虽然两种都可以实现代码复用，但是组合比继承共灵活，因为组合允许你在运行时选择不同的实现。用组合实现的代码也比继承测试起来更加简单。</p><p>119）描述 Java 中的重载和重写？(答案)重载和重写都允许你用相同的名称来实现不同的功能，但是重载是编译时活动，而重写是运行时活动。你可以在同一个类中重载方法，但是只能在子类中重写方法。重写必须要有继承。</p><p>120）Java 中，嵌套公共静态类与顶级类有什么不同？(答案)类的内部可以有多个嵌套公共静态类，但是一个 Java 源文件只能有一个顶级公共类，并且顶级公共类的名称与源文件名称必须一致。</p><p>121) OOP 中的 组合、聚合和关联有什么区别？(答案)如果两个对象彼此有关系，就说他们是彼此相关联的。组合和聚合是面向对象中的两种形式的关联。组合是一种比聚合更强力的关联。组合中，一个对象是另一个的拥有者，而聚合则是指一个对象使用另一个对象。如果对象 A 是由对象 B 组合的，则 A 不存在的话，B一定不存在，但是如果 A 对象聚合了一个对象 B，则即使 A 不存在了，B 也可以单独存在。</p><p>122）给我一个符合开闭原则的设计模式的例子？(答案)开闭原则要求你的代码对扩展开放，对修改关闭。这个意思就是说，如果你想增加一个新的功能，你可以很容易的在不改变已测试过的代码的前提下增加新的代码。有好几个设计模式是基于开闭原则的，如策略模式，如果你需要一个新的策略，只需要实现接口，增加配置，不需要改变核心逻辑。一个正在工作的例子是 Collections.sort() 方法，这就是基于策略模式，遵循开闭原则的，你不需为新的对象修改 sort() 方法，你需要做的仅仅是实现你自己的 Comparator 接口。</p><p>123）抽象工厂模式和原型模式之间的区别？(答案)</p><p>124）什么时候使用享元模式？(答案)享元模式通过共享对象来避免创建太多的对象。为了使用享元模式，你需要确保你的对象是不可变的，这样你才能安全的共享。JDK 中 String 池、Integer 池以及 Long 池都是很好的使用了享元模式的例子。</p><p>Java 面试中其他各式各样的问题</p><p>这部分包含 Java 中关于 XML 的面试题，JDBC 面试题，正则表达式面试题，Java 错误和异常及序列化面试题</p><p>125）嵌套静态类与顶级类有什么区别？(答案)一个公共的顶级类的源文件名称与类名相同，而嵌套静态类没有这个要求。一个嵌套类位于顶级类内部，需要使用顶级类的名称来引用嵌套静态类，如 HashMap.Entry 是一个嵌套静态类，HashMap 是一个顶级类，Entry是一个嵌套静态类。</p><p>126）你能写出一个正则表达式来判断一个字符串是否是一个数字吗？(解决方案)一个数字字符串，只能包含数字，如 0 到 9 以及 +、- 开头，通过这个信息，你可以下一个如下的正则表达式来判断给定的字符串是不是数字。</p><p>127）Java 中，受检查异常 和 不受检查异常的区别？(答案)受检查异常编译器在编译期间检查。对于这种异常，方法强制处理或者通过 throws 子句声明。其中一种情况是 Exception 的子类但不是 RuntimeException 的子类。非受检查是 RuntimeException 的子类，在编译阶段不受编译器的检查。</p><p>128）Java 中，throw 和 throws 有什么区别？(答案)</p><p>throw 用于抛出 java.lang.Throwable 类的一个实例化对象，意思是说你可以通过关键字 throw 抛出一个 Error 或者 一个Exception，如：throw new IllegalArgumentException(“size must be multiple of 2″)</p><p>而throws 的作用是作为方法声明和签名的一部分，方法被抛出相应的异常以便调用者能处理。Java 中，任何未处理的受检查异常强制在 throws 子句中声明。</p><p>129）Java 中，Serializable 与 Externalizable 的区别？(答案)Serializable 接口是一个序列化 Java 类的接口，以便于它们可以在网络上传输或者可以将它们的状态保存在磁盘上，是 JVM 内嵌的默认序列化方式，成本高、脆弱而且不安全。Externalizable 允许你控制整个序列化过程，指定特定的二进制格式，增加安全机制。</p><p>130）Java 中，DOM 和 SAX 解析器有什么不同？(答案)DOM 解析器将整个 XML 文档加载到内存来创建一棵 DOM 模型树，这样可以更快的查找节点和修改 XML 结构，而 SAX 解析器是一个基于事件的解析器，不会将整个 XML 文档加载到内存。由于这个原因，DOM 比 SAX 更快，也要求更多的内存，不适合于解析大 XML 文件。</p><p>131）说出 JDK 1.7 中的三个新特性？(答案)虽然 JDK 1.7 不像 JDK 5 和 8 一样的大版本，但是，还是有很多新的特性，如 try-with-resource 语句，这样你在使用流或者资源的时候，就不需要手动关闭，Java 会自动关闭。Fork-Join 池某种程度上实现 Java 版的 Map-reduce。允许 Switch 中有 String 变量和文本。菱形操作符(&lt;&gt;)用于类型推断，不再需要在变量声明的右边申明泛型，因此可以写出可读写更强、更简洁的代码。另一个值得一提的特性是改善异常处理，如允许在同一个 catch 块中捕获多个异常。</p><p>132）说出 5 个 JDK 1.8 引入的新特性？(答案)Java 8 在 Java 历史上是一个开创新的版本，下面 JDK 8 中 5 个主要的特性：Lambda 表达式，允许像对象一样传递匿名函数Stream API，充分利用现代多核 CPU，可以写出很简洁的代码Date 与 Time API，最终，有一个稳定、简单的日期和时间库可供你使用扩展方法，现在，接口中可以有静态、默认方法。重复注解，现在你可以将相同的注解在同一类型上使用多次。</p><p>133）Java 中，Maven 和 ANT 有什么区别？(答案)虽然两者都是构建工具，都用于创建 Java 应用，但是 Maven 做的事情更多，在基于“约定优于配置”的概念下，提供标准的Java 项目结构，同时能为应用自动管理依赖（应用中所依赖的 JAR 文件），Maven 与 ANT 工具更多的不同之处请参见答案。</p><p>这就是所有的面试题，如此之多，是不是？我可以保证，如果你能回答列表中的所有问题，你就可以很轻松的应付任何核心 Java 或者高级 Java 面试。虽然，这里没有涵盖 Servlet、JSP、JSF、JPA，JMS，EJB 及其它 Java EE 技术，也没有包含主流的框架如 Spring MVC，Struts 2.0，Hibernate，也没有包含 SOAP 和 RESTful web service，但是这份列表对做 Java 开发的、准备应聘 Java web 开发职位的人还是同样有用的，因为所有的 Java 面试，开始的问题都是 Java 基础和 JDK API 相关的。如果你认为我这里有任何应该在这份列表中而被我遗漏了的 Java 流行的问题，你可以自由的给我建议。我的目的是从最近的面试中创建一份最新的、最优的 Java 面试问题列表。</p><p>Java EE 相关的面试题</p><p>为了做 Java EE 的朋友，这里列出了一些 web 开发的特定问题，你们可以用来准备 JEE 部分的面试：</p><p>10 大 Spring 框架面试题及答案(参见)10 个非常好的 XML 面试问题（Java 程序员）(参见)20 个非常好的设计模式面试问题(参见)10个最流行的 Struts 面试题（Java 开发者）(参见)20 个 Tibco Rendezvous 及 EMS 的面试题(更多)10 个最频繁被问到的 Servlet 面试问题及答案(参见)20 个 jQuery 面试问题（Java Web 开发者）(列表)10 个非常好的 Oracle 面试问题（Java 开发者）(参见)10 大 来自 J2EE 面试中的 JSP 问题(更多)12 个很好的 RESTful Web Services 面试问题(参见)10 大 EJB 面试问题及答案(参见)10 大 JMS 及 MQ 系列面试题及答案(列表)10 个非常好 Hibernate 面试问题（Java EE 开发者）(参见)10 个非常好的 JDBC 面试题（Java 开发者）(参见)15 个 Java NIO 和网络面试题及答案(参见)10 大 XSLT 面试题及答案(更多)15 个来自 Java 面试的数据结构和算法问题(参见)10 大 Java 面试难题及答案(参见)40 个核心 Java 移动开发面试题及答案(列表)</p><p>推荐给 Java 面试者的书籍如果你正为 Java 面试寻找好的准备，你可以看一下下面的书籍，这些书籍包含了理论及编码的相关问题Markham 的 Java 编程面试揭秘(参见)破解编码面试：150 个编程问题及解答(参见)程序面试揭秘：寻找下一份工作的秘密(参见)</p><p></p><p>如果觉得我的文章对你有帮助请在下面评论一下告诉我，谢谢！</p><p><br></p>', 'Java 面试随着时间的改变而改变。在过去的日子里，当你知道 String 和 StringBuilder 的区别就能让你直接进入第二轮面试，但是现在问题变得越来越高级，面试官问的问题也更深入。 在我初入职场的时候，类似于 Vector 与 Array 的区别、HashMap 与 Hashtable 的区别是最流行的问题，只需要记住它们，就能在面试中获得更好的机会，但这种情形已经不复存在。如今，你将会被问到许多 Java 程序员都没有看过的领域，如 NIO，设计模式，成熟的单元测试，或者那些很难掌握的知识，如并发、算法、数据结构及编码。', null, null, '', '2017-01-01 14:40:42', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('10', '[干货]如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客', 'wangEditor.min.js:2 wangEditor提示: 本页面富文本编辑器由 wangEditor 提供 http://wangeditor.github.io/ \nwangEditor.min.js:2 wangEditor提示: 正在处理 微博表情 表情的数据...\nwangEditor.min.js:2 wangEditor提示: 建议在配置中自定义百度地图的mapAk，否则可能影响地图功能，文档：http://www.kancloud.cn/wangfupeng/wangeditor2/113961\na.(anonymous function) @ wangEditor.min.js:2\nm.onRender @ wangEditor.min.js:3\nc.fn.render @ wangEditor.min.js:2\n(anonymous) @ wangEditor.min.js:4\neach @ jquery-1.10.2.min.js:4\na.fn.renderMenus @ wangEditor.min.js:4\na.fn.create @ wangEditor.min.js:2\n(anonymous) @ wangeditor.html?_ijt=dk6k1dcr3633o4ehmpkjbmh53s:26\nwangeditor.html?_ijt=dk6k1dcr3633o4ehmpkjbmh53s:30 html：\n    <p><img src=\"http://upload-images.jianshu.io/upload_images/281665-55894c151b769fd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><blockquote>对程序员而言，最好的简历就是个人博客和GitHub</blockquote><h2>零、个人博客</h2><p>每个优秀的程序员都会有个人独占的一方网络空间，那里是他个人的舞台，听说过他的人会逐渐汇聚进来，认识他，熟悉他，鼓励他，赞扬他。而对他个人而言，他有了一个可以畅所欲言的小房间，他可以专研学术，聊聊情怀。同时和喜爱他的读者成为好友，共同成长。</p><p>这难道不是一件很cool的事情吗？</p><h2>一、先看成果</h2><p>教方法前先来看看最终的效果吧。<a href=\"http://wingjay.com/\" target=\"_blank\">http://wingjay.com</a>是本人搭建的个人博客，可作为模版参照，主要特性有以下几点：</p><pre><code>1. 个人域名: wingjay.com\n2. 无需购置服务器，本站同时挂载在Github Pages 和 GitCafe Pages上，免服务器费的同时还能做负载均衡，想想还有点小激动\n3. 在GitHub上同时管理你的博客和相应代码，再也不用担心博客遗失\n4. SSL支持，即\"http://\" -&gt; \"https://\"，更安全也更高大上</code></pre><h2>二、再看兵器</h2><ul><li>博客框架：<a href=\"https://hexo.io/\" target=\"_blank\">Hexo 3</a>，这是一款能快速、简洁且高效的博客框架，支持<a href=\"https://help.github.com/articles/markdown-basics/\" target=\"_blank\">Markdown编辑</a>，自动渲染出漂亮的静态页面。</li><li>前端主题：<a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\">Next</a>，效果参考<a href=\"http://wingjay.com/\" target=\"_blank\">http://wingjay.com</a></li><li>域名购买：类似万网的平台都可以，你可以选购自己名字的域名，一年几十元左右，两杯咖啡的钱。</li><li>SSL：<a href=\"https://www.cloudflare.com/\" target=\"_blank\">CloudFlare</a></li></ul><h2>三、抄起家伙</h2><p>本文写作方式是安装流程主线&nbsp;+&nbsp;优质参考文章。由于网络上关于Hexo搭建博客的教程玲琅满目，若读者完全自己动手则要一篇篇找，浪费时间走弯路；相反，若作者悉数摘抄进来，反倒未必符合各人情况，且不利阅读。</p><p>所以，主线讲解思路，参考深入阅读。</p><p>下文以搭建&nbsp;<a href=\"http://wingjay.com/\" target=\"_blank\">http://wingjay.com</a>&nbsp;个人博客为例。</p><h3>1. GitHub Pages</h3><p>在不购买服务器的前提下，我们的网站需要挂在GitHub Pages上。</p><ol><li>你需要拥有一个<a href=\"https://github.com/\" target=\"_blank\">GitHub账号</a>，去完成新手任务吧。</li><li>进入<a href=\"https://pages.github.com/\" target=\"_blank\">GitHub Pages</a>，一步步做，完成后就能在浏览器打开<a href=\"http://wingjay.github.io/\" target=\"_blank\">http://wingjay.github.io</a>了。</li></ol><p>至此，我们已经利用GitHub Pages搭建好了个人博客雏形了。下面要做的，就是个性化了。</p><h3>2. 安装Hexo博客框架</h3><p>经过上面步骤，我们已经拥有了一个初步域名：<a href=\"http://username.github.io/\" target=\"_blank\">http://username.github.io</a>&nbsp;加一个免费网络空间了。好比房间有了，但还没有任何家具。所以下面我们需要把空白的博客丰富起来。</p><p>放心，不需要你手写一大堆html、css文件，也不用找jQuery来实现酷炫的页面效果。<a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>是一款博客框架，它会帮我们搭建。</p><h4>i. 安装Hexo</h4><p>参考<a href=\"https://hexo.io/docs/\" target=\"_blank\">中文文档</a>或<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\">英文文档</a>。完成该步后，你的电脑便拥有了Git、Node.js和Hexo。</p><h4>ii. GitHub管理</h4><p>为了让自己未来的博客和代码处在git管理之下，我们要把刚刚在Github上博客项目拉到本地。如本人创建的<a href=\"https://github.com/wingjay/wingjay.github.io\" target=\"_blank\">https://github.com/wingjay/wingjay.github.io</a>，在本地创建文件夹，名字任意，此处设为myblog，进入该文件夹，把项目代码clone下来。</p><pre><code>git clone https://github.com/wingjay/wingjay.github.io</code></pre><p>好了，此时会自动在myblog目录下创建子文件夹wingjay.github.io,那里就是我们博客的代码，以后的操作都在git的管理之下了，此时默认的branch为master。</p><h4>iii. 初始化Hexo</h4><p>请参考<a href=\"https://hexo.io/docs/setup.html\" target=\"_blank\">文档</a>。init命令中的&lt;folder&gt;就是文件夹wingjay.github.io。初始化后，wingjay.github.io里面就已经有完整的Hexo框架了。</p><h4>iv. 熟悉Hexo</h4><p>为了让读者快速了解Hexo，我作几个简单介绍吧。当然，更多的还是需要仔细阅读<a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\">文档</a>才能了解更详细。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/281665-81f7ec57d85a973d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>Hexo目录结构</p><ul><li>_config.yml是整体的配置文件，很多基础配置、插件配置等都需要在里面进行。要注意的是，该文件格式要求极为严格，缺少一个空格都会导致运行错误。小提示：不要用Tab缩进，用两个空格符。</li><li>layout，包括draft(草稿)、page(页面)、post(文章)。这个就是三种文件的基本格式，其中post是你发表的文章，会显示在你的网站里，一篇post会包括title标题、date日期、tags标签等信息；draft是草稿，只有你在本地能看到，必须要publish后才能成为post，draft和post差别是date，因为draft没有发表，所以不需要指定日期。page是一个页面，对应一个新的html页面，比如<a href=\"http://wingjay.com/2015/12/06/%E8%AF%B4%E4%B8%80%E8%AF%B4%E5%8D%9A%E5%AE%A2/\" target=\"_blank\">博客内容展示页</a>是一个页面，<a href=\"http://wingjay.com/guestbook/\" target=\"_blank\">留言本</a>也是一个页面。</li><li>public文件夹，这个文件夹是最终会发布到网站上的真实内容。怎么理解呢？我们可以把public文件夹当作是真正的被用户看到的，而其他的source、themes等都是为public服务的。Hexo里有一个很重要的指令hexo generate，这个指令就是利用所有代码里的配置信息、source里写的文章、themes里的样式，共同生成最终的静态html文件，存入public文件夹内。在我们执行了发布指令hexo deploy后，就会把public的内容部署到GitHub Pages上。当用户在访问我们的博客时，他们会看到public里生成的html文件。这个概念非常重要，即代码和真实静态页面是独立的。</li><li>generate和deploy，generate会把我们的配置、文章和主题结合起来生成一堆酷炫的html静态文件放在public里面。但此时用户还看不到本地public文件里的页面，我们必须用后一个指令deploy才能把静态文件部署到GitHub Pages上。不过，在部署前，需要配置让它自动部署到我们前面创建的<a href=\"https://github.com/wingjay/wingjay.github.io\" target=\"_blank\">Github项目</a>中。</li><li>deploy相关配置。为了能够让项目自动把public文件夹的内容部署到<a href=\"https://github.com/wingjay/wingjay.github.io\" target=\"_blank\">GitHub项目</a>中，我们可以按<a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\">部署文档</a>进行配置，其中选择的branch为master。此后，每次运行deploy后，项目就会自动把public文件夹内容全部覆盖到<a href=\"https://github.com/wingjay/wingjay.github.io/tree/master\" target=\"_blank\">当前的GitHub项目master分支上</a>。</li><li>代码和静态文件分开管理。根据上面知道，每次部署后，public文件内容会覆盖掉项目整个master分支。这样可以实现网站静态文件的版本控制，但是，仔细对比这个master分支，我们会发现里面只剩下静态文件了，我们的代码比如source、themes统统没有了，这就导致无法对代码进行版本管理了。这意味着我换一台电脑，我就再也找不到代码了，只剩下一堆之前编译出来的静态文件。所以，为了对代码也进行版本控制，我们创建一个<a href=\"https://github.com/wingjay/wingjay.github.io/tree/code\" target=\"_blank\">新的分支：code</a>，然后在这个分支里进行代码控制，master里则保存部署的新的静态文件。大家可以自行比对这两个branch的内容差异。</li></ul><h4>v. 配置Hexo</h4><p>做一些基础配置即可，请参考<a href=\"https://hexo.io/docs/configuration.html\" target=\"_blank\">配置文档</a></p><h4>vi. 小结</h4><p>到这里，我们已经完成了hexo的配置，我们可以分别管理代码和静态文件。执行deploy操作后，刷新你的网页&nbsp;<a href=\"http://username.github.io/\" target=\"_blank\">http://username.github.io</a>&nbsp;你就能看到默认的内容了。</p><p>但此时还是默认主题，不够美观，所以下一步要配置Next主题。</p><h3>3. 配置主题Next</h3><p>Hexo主题非常多，可以参考<a href=\"https://hexo.io/themes/\" target=\"_blank\">丰富多彩的Hexo主题</a>，本文选Next为主题，样式参考<a href=\"http://wingjay.com/\" target=\"_blank\">我的博客</a>。</p><p>进入配置阶段，最好的文档还是<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\">官方文档</a>，简单得不能再细致了。下面只提几点注意：</p><ul><li>第三方评论系统。评论系统很重要，你可以与读者进行更多交流，配置也简单，建议采用<a href=\"https://disqus.com/\" target=\"_blank\">DISQUS</a>，更国际化一点，<a href=\"http://theme-next.iissnan.com/third-party-services.html#DISUQS\" target=\"_blank\">配置见此</a>。另外，前期建议开启不登陆评论，即在Disqus的Comment Rule里允许Guest comment。</li><li>创建留言板。熟悉page的创建与使用，<a href=\"http://www.arao.me/2015/hexo-next-theme-optimize-base/#%E4%B8%BA%E4%BD%A0%E…7%AB%99NexT%E4%B8%BB%E9%A2%98%E5%A2%9E%E5%8A%A0%E7%95%99%E8%A8%80%E9%A1%B5\" target=\"_blank\">参考这里</a></li><li>给自己博客做SEO。有好的SEO便于搜索引擎索引你的网站，随着以后读者增多，他们可以更好搜索到你的网站。<a href=\"http://www.arao.me/2015/hexo-next-theme-optimize-seo/\" target=\"_blank\">具体方法见此</a></li></ul><h3>4. 替换自己的域名</h3><p>好了，经过上面的步骤，博客已经拥有了一个全新的主题啦。</p><p>下面，我们要对域名&nbsp;<a href=\"http://wingjay.github.io/\" target=\"_blank\">http://wingjay.github.io</a>&nbsp;下手啦。</p><h4>i. 购买域名</h4><p>速速前往万网或相关域名购买网站，按自己名字挑选一个闪闪发光的个人域名吧！</p><h4>ii. 域名解析_1</h4><p>以购买的域名wingjay.com为例，我们希望在访问这个域名时能自动进入Github Pages，所以我们要在万网建立一个CNAME纪录来帮我们做一个域名跳转：wingjay.com&nbsp;-&gt;&nbsp;wingjay.github.io，www.wingjay.com&nbsp;-&gt;&nbsp;wingjay.github.io。添加方法<a href=\"http://www.sudu.cn/service/detail/1/0/0/3/10036.html\" target=\"_blank\">参考这里</a>，添加后可以看到两条记录：</p><p><img src=\"http://upload-images.jianshu.io/upload_images/281665-29cc84f4210ad9c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>域名解析</p><p>然后万网会在世界各地的DNS服务器上添加这两条记录，当用户访问wingjay.com时会自动去访问wingjay.github.io。</p><h4>iii. 域名解析_2</h4><p>但是，此时并不能成功访问，因为Github Pages是有限制的，它不允许任意域名都跳转过来，而是只限制一个域名，而且这个域名必须声明在CNAME文件中。</p><p>所以，我们需要添加一个CNAME文件到项目的master中才行，<a href=\"https://help.github.com/articles/adding-a-cname-file-to-your-repository/\" target=\"_blank\">参考这里</a>。读者可以参考<a href=\"https://github.com/wingjay/wingjay.github.io/blob/master/CNAME\" target=\"_blank\">本人的CNAME文件内容</a>。</p><p>不过，对于Hexo 3，这里有一个坑要注意：大家应该还记得上文说的，master分支里的内容都是自动生成的，而且会完全覆盖之前的内容。如果我们直接创建一个新文件CNAME，填好域名。但会发现在下一次部署后这个文件就消失了。不用惊讶，因为hexo并不会自动生成CNAME文件，所以在部署时被覆盖删除了。</p><p>所以，我们就需要这个CNAME工具<a href=\"https://github.com/leecrossley/hexo-generator-cname\" target=\"_blank\">hexo-generator-cname</a>，这时会自动在public里生成一个CNAME文件，把你的域名加进去再部署一下吧！</p><h3>5. HTTP -&gt; HTTPS</h3><p>HTTPS是安全版的HTTP协议，它在http协议与TCP之间加入SSL层，采用端口443，不仅会对传输数据加密，还会进行身份验证。当然个人博客并没有强制性要求采用该协议，这也只是本人的好奇而为。</p><p>目前Github Pages已经支持https了，但是不支持自定义证书。不过我们可以利用<a href=\"https://www.cloudflare.com/\" target=\"_blank\">CloudFlare</a>来实现。具体实现可以<a href=\"https://www.benburwell.com/posts/configuring-cloudflare-universal-ssl/\" target=\"_blank\">参考这里</a>。</p><p>说明：po主网站的https正处在申请中</p><h2>四、总结</h2><p>经过上面的步骤，我们已经能够通过访问自己的域名进入自己酷炫的博客了。本文的任务也就告一段落。</p><p>除了上面的功能，本人还完成了支持双域名同时登陆，其中，支持双域名的解决思路是考虑到<a href=\"https://help.github.com/articles/adding-a-cname-file-to-your-repository/\" target=\"_blank\">Github Pages的CNAME纪录只允许添加一个域名</a>，所以本人又在<a href=\"https://gitcafe.com/\" target=\"_blank\">Gitcafe</a>上部署了一套。不过考虑到这点大家不一定能用的上，就没有做介绍，有需要的话可以看下文的联系方式联系我。</p><h2>五、一天变cool系列文章</h2><p><a href=\"http://www.jianshu.com/p/cf496fc408b2\" target=\"_blank\">如何在一天之内完成一款具备cool属性的Android产品&lt;简诗&gt;</a></p><p><a href=\"http://www.jianshu.com/p/99665608d295\" target=\"_blank\">如何在一天之内搭建以你自己名字为域名且具备cool属性的个人博客</a></p><p>谢谢！</p><p></p><p>wingjay</p><p><br></p>', '每个优秀的程序员都会有个人独占的一方网络空间，那里是他个人的舞台，听说过他的人会逐渐汇聚进来，认识他，熟悉他，鼓励他，赞扬他。而对他个人而言，他有了一个可以畅所欲言的小房间，他可以专研学术，聊聊情怀。同时和喜爱他的读者成为好友，共同成长。', null, null, '', '2016-08-01 14:40:48', 'zhongmc', null, null);
INSERT INTO `tbl_blog` VALUES ('11', '我是如何通过一个月的突击拿到微信实习offer的', 'wangEditor.min.js:2 wangEditor提示: 本页面富文本编辑器由 wangEditor 提供 http://wangeditor.github.io/ \nwangEditor.min.js:2 wangEditor提示: 正在处理 微博表情 表情的数据...\nwangEditor.min.js:2 wangEditor提示: 建议在配置中自定义百度地图的mapAk，否则可能影响地图功能，文档：http://www.kancloud.cn/wangfupeng/wangeditor2/113961\na.(anonymous function) @ wangEditor.min.js:2\nm.onRender @ wangEditor.min.js:3\nc.fn.render @ wangEditor.min.js:2\n(anonymous) @ wangEditor.min.js:4\neach @ jquery-1.10.2.min.js:4\na.fn.renderMenus @ wangEditor.min.js:4\na.fn.create @ wangEditor.min.js:2\n(anonymous) @ wangeditor.html?_ijt=dk6k1dcr3633o4ehmpkjbmh53s:26\nwangeditor.html?_ijt=dk6k1dcr3633o4ehmpkjbmh53s:30 html：\n    <p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-adb6a6614d31f01b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>蠢作者写在前面的话：</p><p>我错喏，因为是自己在简书上发的第一篇文章，感觉不会有多少人看到，所以起了一个这么套路的标题，毕竟写了想更多的人看嘛！</p><p>我的本意是给学弟学妹们写个面经的，文风欢脱了些，但是没想到真的这么多人看到了，感觉给微信造成了很不好的影响，所以澄清一下。</p><p>蠢作者的学校是国内一所还不错的985高校，去微信实习前有一个国家级大学生创新项目和两个校级大学生创新项目，在老师的实验室还有过WEB后台开发的经历，甚至微信并不是我第一家实习的公司。</p><p>而且蠢作者最后没有拿到转正的名额！！！不要问我为什么！</p><p>很简单啊，当然是因为同批进微信的实习生里最弱啦！</p><p>但是我的面试经历是真的有用的，我说的突击其实叫复习更为合适。</p><p>比如王道考研的数据结构那本书，我学习的时候看第一遍就用了差不多一个月的，春招突击是我刷的第三遍，所以才能那么快的看完，明明文章里有写啊。</p><p>这篇文我就不删了，因为我觉得我的面试经验是对的。</p><p>有时候大家不是实力不够，只是缺少面试的套路，希望能帮到正在参加春招的同学。</p><p>注册简书后一直在想自己的第一篇文章写什么好，琢磨了好几天也没想出好的主题。今天下午学弟找我要面经，于是就有了这篇文章。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-a16c27183ce43b7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>说是突击一个月确实是没有夸张的，因为我也不知道我去年年初抽了什么风，报了三月份的德福考试，所以整个寒假加开学后的一个多月一直在复习德语。</p><p>然而考试的时候，听力实力蒙圈，考完当天我发的朋友圈是酱色的：</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-65e169032cd899df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>3月26号之后我才开始准备春招，一开始本着涨面试经验并不奢望真的能拿到offer的想法就只投了BAT+网易。</p><p>幸好还是赶上了内推的末班车，大厂的工作效率都很高，很快就收到了阿里和百度的一面电话。然后连自己做过的项目的细节都记不清了的我很自然就是这个下场，卒！</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-3cb77e8b6836e332.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>然后我并没有收到腾讯的内推电面（一直觉得SNG每年的HC最多，所以就投的SNG，应该是投SNG的人实在是太多了，蠢作者的简历在内推里评级太低~），网易内推了还要做笔试，基础知识当然也早就忘光了，所以网易内推挂在笔试。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-eaa6215eea671231.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>本来想着自己也就打打酱油的，可是你面试机会都不给我！面试机会都不给我！面试机会都不给我！</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-ea46c8320fb26e01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>所以很好，你们成功的激起了我的好胜心，我正式宣布和春招杠上了~</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-b4c810f450b54e76.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>内推挂掉还是可以重新投递线路招聘的，所以蠢作者挨个重新投了一下。然后就开始了一个月左右在图书馆封闭式的突击。</p><p>虽然内推的时候收到的两个一面电话都挂掉了，但是还是达到了我积累经验的初衷的。当然不是说我通过两个电话就顿悟，掌握了面试的技巧啦。而是通过那两个面试我发现了这样一个事实，那就是网上的面经真的有用！真的有用！真的有用！</p><p>重要的事情说三遍。</p><p>网上的面经就和雅思的机经是一个道理，都是真题啊！感谢前辈们孜孜不倦的回忆记录这才能造福我们这些晚辈们呀！</p><p>所以这就和应付化了重点的考试一样，突然就从要背一整本的毛概变成了背100个思修题。</p><p>一下子就容易很多了呢~</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-16d11d077ed3cace.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>我突击的第一步就是把自己之前项目的代码再看一遍，顺带找找里面有没有拿得出手的部分。这一步我没有花多久，毕竟有注释哈哈哈。如果这步有特殊情况的宝宝，可能突击的时候要给自己多预留一点时间了。</p><p>然后第二步就是把网上我能找到的BAT三个厂的Android岗位的面经都找到了，然后做了分类整理。</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-ce614fc850e1b558.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>比如说把JAVA基础的面试题目放在一起，把数据结构算法的题目放在一起，把Android基础的题目放在一起，把项目经历的题目放在一起，把人生哲学的题目放在一起。</p><p>然后计网，操作系统，数据库的题目通通不管了，因为当时我的时间确实不够用了。总结网上那些面经很容易发现这三块知识是抽着问的，所以时间来不及的时候把他们放在最后复习。其实这三块知识，普通开发岗位的话，准备起来也很快，比如计网多半就会问网络的7层结构，TCP和UDP的区别这些。宝宝们自己整理一下吧~</p><p>第三步就是分析你所投的岗位的面试官都喜欢问什么。统计一下你就和发现所有大厂面试官问的问题都差不多咧。比如Android的面试官一定会问下面几个模块中的几个：</p><p>1.OOM相关的。</p><p>2.进程线程相关的。</p><p>3.适配相关的。</p><p>4.ANR相关的。</p><p>5.持久化存储相关的。</p><p>之前整理的模块分析文档找不到了，所以只凭印象写了几个模块，准备春招的宝宝要自己整理一下。</p><p>然后这几个模块不需要每个模块都非常的精通，但是基本知识你一定要都弄清楚。比如你可以不知道<a href=\"http://www.jianshu.com/p/e22fb6d2bfb1\" target=\"_blank\">Service</a>默认是运行在主线程的，但是你不能不知道ANR的原因是在UI线程里进行了耗时操作。</p><p>然后你要挑两个模块去深入的学习一下，当然是针对面试中会问的问题咯。比如Android中的异步消息处理机制，不过这个几乎是要弄懂的必选项，笔试面试问到的几率太大了，最好自己跟踪一下源码弄清楚。</p><p>这个不同的岗位会有不同的需要掌握的基本内容，需要根据网上的面经自己整理一下。</p><p>然后技术岗都一定会问到的就是数据结构和算法啦，这个是硬功夫了，没有技巧的，大家怎么学的就怎么准备。搜狐的一个面试官大大就告诉我说，他一般会问几个不是太难的算法题，如果都能做出来，那么面试的同学通过的可能性就比较大。然后他还会加试一个很难的，最后那个问题是决定要不要给这位同学special offer的。</p><p>蠢作者面微信事业群的时候被问了5个算法题，头两个是手写的，最后三个讲的思路。题目都不是很难，但是蠢作者自认为答题的过程中有三个亮点（面试官是不是这么想我就不知道了，从他的表情看应该差不多hhh）：</p><p>1.有个常规是用递归解的问题，蠢作者给出了递归和循环两种解法。</p><p>2.有个问题我用的解法貌似面试官是第一次看到。因为我已经在做下一个题了，他突然指出了我上个问题只能解决问题规模比较小的情况。然后我静静地装了个逼，说了下一般的解法，然后说我选用之前的解法是因为有趣。</p><p>3.每解决一个题，主动的分析时间复杂度，并且分析还有没有更优的解法。</p><p>也就是说，蠢作者在面试的时候一直在给自己加戏。不一定是在面试官问数据结构的时候，而是如果面试官好不容易问到你擅长的地方了，请不要犹豫的给自己加戏。</p><p>面试不是攻防大赛，撑过这段时间就能拿到offer了。所以不要只有一问一答，你要想办法在这段时间里给自己加戏。</p><p>当然演过头了也不好。</p><p>面试的时候，面试官往往对你的优点更感兴趣，因为他要看你的优点对他有没有价值，能不能把你放到他的团队。</p><p>蠢作者当时复习数据结构的时候用的资料有三个：</p><p>1.我们数据结构老师的PPT。这个课是我大学里一节课不逃上下来的为数不多的几门课之一，老师讲的很好。（有看到这篇文的宝宝想要PPT的可以用简信找我要）</p><p>2.王道考研的数据结构。（这本资料因为我准备数据结构期末考试的时候刷过两遍了，所以看起来比较快，如果时间不够的话不推荐用这个复习）</p><p>3.程序员面试宝典。（我会说上面我用来装逼的那个题是这上面的一个原题吗hhh）</p><p>最后一步，也是比较重要的一步，你要准备面试的逐字稿，内容包括自我介绍，项目经历描述，和你深入了解模块的描述。</p><p>很多同学看到这里要说啦，不要以为程序员表达能力都不好，我表达能力很好好嘛？逐字稿这种low货，看我的眼神~</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-5307e6761e36c0a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>那就让蠢作者来给你分析一下，为什么要写逐字稿。</p><p>你以为写逐字稿就是为了让你把项目描述清楚嘛？</p><p>有的同学面试的时候，面试官让他说项目经历，他就噼里啪啦一通说，然后心里还祈祷着不要问我太难的问题，不要问我太难的问题，然后面试官真的没有问什么问题，他还十分庆幸，觉得糊弄过去了。</p><p>人家面试官不问你难的问题是觉得你的项目经历里没啥好问的好嘛！</p><p>这个时候有的同学就要说了，MDZZ，他要是问我一堆我不会问的问题，不是更惨嘛！</p><p>所以我才说要写逐字稿啦！</p><p>逐字稿最关键的作用是什么呢？让你的面试官问你，你想他问的问题。</p><p>刚刚第一步里我让大家找自己项目里拿得出手的地方，就是在这个时候用的。</p><p>这个时候刚刚嘲笑我的同学就又要笑得更大声了，哈哈哈，你个傻×，你让面试官问，面试官就问啊。</p><p>不要笑哦，一个好的面试官，就是我们想让他问什么他就问什么。</p><p>计算机相关的知识那么多，就是面试官自己也不敢说他们都会了，更何况我们小小的本科生。研究生博士生宝宝们应该也不敢这么说吧。面试官也不会自己会什么，就问你什么吧！（同学有碰到这样的面试官，她面java，面试官一直问她C++的东西，所以回答的一塌糊涂。但是人家面试官也知道是自己面试的时候没有控制住自纸，所以没有直接毙掉她，而是转推荐到其他部门去面试了）如果真遇到这样的面试官，那是面试官自己的问题，宝宝们就不要纠结了。</p><p>有经验的面试官会想要问你会哪些东西，并且看你掌握到什么程度，从而推断你研究问题的能力。</p><p>面试官怎么知道你会什么呢？唯二的途径就是你的简历和你对项目经历的描述。</p><p>所以那些面试官问项目经历的时候就照着简历念一遍的同学，你不是逼着你的面试官随机问你，他认为你该会的问题吗？</p><p>面试官能怎么办，他也很绝望啊！</p><p><img src=\"http://upload-images.jianshu.io/upload_images/4968075-d4c59d49ac09431b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"><br></p><p>所以你要写逐字稿，在你的项目经历描述里不着痕迹的暗示你的面试官问你什么问题。比如你把图片缓存吃透了，你就可以说，我在完成这个项目的时候，发现<a href=\"http://blog.csdn.net/dj0379/article/details/38356773\" target=\"_blank\">XUtils</a>的图片缓存不够好，所以自己封装了一个。</p><p>你都这么说了，我就不信面试官不问你图片缓存有关的东西。</p><p>但是这样做也会有一个问题，那就是，你既然都暗示面试官这是你的得意之作了。</p><p>面试官就会拿这个当成你的最高水平来考察你，他会循序渐进地深挖，直到挖到你没有研究到的地方为止，看看你的极限在哪里。</p><p>所以你自己挑选出来的问题，你就真的要研究的深一点点。要是这都让面试官觉得深度不够，那就没有办法了。</p><p>而且你准备的这些点还可以用来回答诸如，你觉得你在这个项目中遇到的最难解决的问题是什么的这类问题。</p><p>技术面的准备工作就是这么多，技术是没有办法突击的，但是面试还是可以的。</p><p>最后我还是要说一下HR面。大厂的HR面也是刷人的，虽然大多数大厂的HR面没有华为的心理测试那么恐怖，还是有一些坑要避开的。有哪些坑大家网上搜一搜就知道了。</p><p>我只说一点，那就是一定要在前两面的时候问清楚自己面的部门到底是什么。蠢作者就因为自己投的是SNG，就以为自己面试的肯定是SNG，结果HR姐姐问着问着觉得不对了，才问我“你知道你自己面试的是哪个事业群吧？”蠢作者还很肯定的说，“SNG呀！”。蠢作者现在还能感受到当时凝固了的尴尬气氛。</p><p>祝，学弟学妹们春招顺利！</p><p></p><p>以上。（我都写得这么辛苦了，真的不赞一下吗/(ㄒoㄒ)/~~）</p><p><br></p>', '我错喏，因为是自己在简书上发的第一篇文章，感觉不会有多少人看到，所以起了一个这么套路的标题，毕竟写了想更多的人看嘛！\r\n\r\n我的本意是给学弟学妹们写个面经的，文风欢脱了些，但是没想到真的这么多人看到了，感觉给微信造成了很不好的影响，所以澄清一下。', null, null, null, '2017-02-20 20:53:02', 'zhongmc', null, null);

-- ----------------------------
-- Table structure for tbl_blog_tag
-- ----------------------------
DROP TABLE IF EXISTS `tbl_blog_tag`;
CREATE TABLE `tbl_blog_tag` (
  `id` int(32) NOT NULL,
  `blogid` int(32) DEFAULT NULL,
  `tagid` int(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbl_blog_tag
-- ----------------------------
INSERT INTO `tbl_blog_tag` VALUES ('0', '5', '4');
INSERT INTO `tbl_blog_tag` VALUES ('1', '1', '1');
INSERT INTO `tbl_blog_tag` VALUES ('2', '1', '2');
INSERT INTO `tbl_blog_tag` VALUES ('3', '2', '1');
INSERT INTO `tbl_blog_tag` VALUES ('4', '2', '2');
INSERT INTO `tbl_blog_tag` VALUES ('5', '3', '1');
INSERT INTO `tbl_blog_tag` VALUES ('6', '4', '3');
INSERT INTO `tbl_blog_tag` VALUES ('7', '6', '1');
INSERT INTO `tbl_blog_tag` VALUES ('8', '7', '4');
INSERT INTO `tbl_blog_tag` VALUES ('9', '8', '2');
INSERT INTO `tbl_blog_tag` VALUES ('10', '9', '1');
INSERT INTO `tbl_blog_tag` VALUES ('11', '9', '4');
INSERT INTO `tbl_blog_tag` VALUES ('12', '10', '3');
INSERT INTO `tbl_blog_tag` VALUES ('13', '10', '2');
INSERT INTO `tbl_blog_tag` VALUES ('14', '11', '3');

-- ----------------------------
-- Table structure for tbl_tag
-- ----------------------------
DROP TABLE IF EXISTS `tbl_tag`;
CREATE TABLE `tbl_tag` (
  `id` int(32) NOT NULL AUTO_INCREMENT,
  `tagname` varchar(100) NOT NULL,
  `createtime` datetime DEFAULT NULL,
  `createby` varchar(200) DEFAULT NULL,
  `updatetime` datetime DEFAULT NULL,
  `updateby` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`,`tagname`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbl_tag
-- ----------------------------
INSERT INTO `tbl_tag` VALUES ('1', '数据库', '2017-01-25 12:59:34', 'zhongmc', null, null);
INSERT INTO `tbl_tag` VALUES ('2', 'Java', '2017-01-25 12:59:51', 'zhongmc', null, null);
INSERT INTO `tbl_tag` VALUES ('3', '大数据', '2017-01-26 21:58:39', 'zhongmc', null, null);
INSERT INTO `tbl_tag` VALUES ('4', 'Spring', '2017-01-12 21:58:59', 'zhongmc', null, null);

-- ----------------------------
-- Table structure for tbl_user
-- ----------------------------
DROP TABLE IF EXISTS `tbl_user`;
CREATE TABLE `tbl_user` (
  `id` int(32) NOT NULL,
  `username` varchar(200) NOT NULL,
  `password` varchar(200) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tbl_user
-- ----------------------------
INSERT INTO `tbl_user` VALUES ('1', 'zhangsan', 'zhangsan');
INSERT INTO `tbl_user` VALUES ('2', 'lisi', 'lisi');
